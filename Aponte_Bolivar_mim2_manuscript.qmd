---
title: "[Working title]: Foliar fungal symbionts in sympatric yellow monkeyflowers along elevation gradients in the Sierra Nevada"
date: last-modified
date-format: "MMMM D, YYYY"
bibliography: references.bib
csl: apa.csl
author:
  - name: Bolívar Aponte Rolón
    orcid: 0000-0002-2544-4551
    email: baponterolon@tulane.edu
    corresponding: true
    affiliations: 
      - ref: tu
        name: Tulane University
        department: Ecology and Evolutionary Biology
        city: New Orleans
        state: LA
        country: US
        url: www.tulane.edu
  - name: Kathleen G. Ferris
    email: kferris@tulane.edu
    corresponding: false
    affiliations: 
      - ref: tu
  - name: Sunshine A. Van Bael
    orcid: 0000-0001-7317-3533
    email: svanbael@tulane.edu
    corresponding: false
    affiliation: 
      - ref: tu
      
affiliations:
  - id: tu
    name: Department of Ecology and Evolutionary Biology, Tulane University, 6823 St. Charles Avenue, New Orleans, LA 70118

filters:
  - authors-block

format:
  # pdf:
  #   documentclass: scrartcl
  #   include-in-header:
  #       text: '\usepackage{lineno}\linenumbers'
  #   linestretch: 2.0
  #   margin-left: 1in
  #   margin-right: 1in
  #   margin-top: 1in
  #   margin-bottom: 1in
  #   mainfont: TeX Gyre Termes #Alternative to Times New Roman
  #   sansfont: TeX Gyre Termes #Another option is Liberation Serif
  #   number-sections: true
  #   citation-package: biblatex
  #   #keep_tex: true
  #   keep_md: true
  docx:
    reference-doc: custom-reference-doc.docx
    number-sections: true
    tbl-colwidths: true
    #linestretch: 2.0
    citation-package: biblatex
crossref:
  custom:
    - kind: float
      key: suppfig
      latex-env: suppfig
      reference-prefix: Fig. S
      space-before-numbering: false
      latex-list-of-description: Supplementary Figure
    
editor: source
execute:
  echo: false
warning: false
---

```{r, cleaning_shaping_data}
#| echo: false
#| eval: true
#| tidy: true

library("tidyverse")
library("data.table")
library("ggpubr")
library("ggfortify")
library("ggtext")
library("ggh4x")
library("ggpmisc")
library("broom")
library("MetBrewer")
library("rstatix")
library("readxl")

# Models
library("car")
library("nlme")

# Diversity
library("vegan")
library("hillR")
library("iNEXT")
library("geosphere")
library("indicspecies")

# Phyloseq friendly
#Some of these are redundant and have conflicts, but have functions that I like better than others or compliment each other.
library("phyloseq")
library("microeco") # New package for microbial analyses
library("file2meco") # File to microeco (phyloseq friendly)
library("metagMisc") # Miscellaneous functions
library("microbiome") # Expands phyloseq 
library("mirlyn")

library("conflicted")
conflict_prefer("select", "dplyr")
conflict_prefer("filter", "dplyr")
conflict_prefer("alpha", "ggplot2")

# File path

path <- "../mim2_bioinformatics" # Change accordingly

# Main data sets
# The data cleaning and wrangling of `leaf_traits` and `plant_traits` data sets are in the `mim2_statistics.qmd` notebook, chunk `cleaning_chaping_data`. The data sets are saved as RDS files and CSV files in the `statistics` folder. The data cleaning and wrangling for phyloseq objects are in the `mim2_bioinformatics.qmd` notebook. The phyloseq objects are saved as RDS files and CSV files in the `taxonomy` folder.

# The FEF community data is only available for 160/320 samples. For the downstream analyses, we eliminated *M. bicolor* or species "B" in the data set. The removal of this is due to a small sample size for leaf trait measurements and even smaller for FEF community data (*n* = 3). The removal is not explicit in `plant_traits` it is only explicit in the subset `leaf_traits_noB` and latter on in the `asv_matrix` that gives way for community analyses in [Community Diversity] in the mim2_statistics.qmd. We include a custom function for p-value formatting.

# We will load the data sets and phyloseq objects here.


#### Load leaf traits master files ####
traits <- read.csv(file.path(path, "field_data/mim2_leaf_traits_field_survey.csv")) #Raw file just in case

leaf_traits <- readRDS(file.path(path, "clean_data/statistics/leaf_traits.rds"))

plant_traits <- readRDS(file.path(path, "clean_data/statistics/plant_traits.rds"))

plant_traits_MB <- readRDS(file.path(path, "clean_data/statistics/plant_traits_MB.rds")) #Substitues ps_melt df

pseq_rrfb <- readRDS("clean_data/statistics/pseq_rrfb.rds") # Loading rarefied phyloseq object Method B

#Removing species B
leaf_traits_noB <- leaf_traits |>
  filter(!Species == "M. bicolor")

#### Phyloseq objects ####
#Phyloseq joins various objects that we have already prepare: taxonomic table, ASV table and our sample data.
#These are the data frames resulting from the phyloseq section in mim2_bioinformatics.qmd notebook.

#Load Phyloseq object cleaned of singletons (231 ASVs)
ps_clean_3 <- readRDS(file.path(path, "clean_data/taxonomy/ASV_8450_phyloseq_nonsingletons_noB.rds"))
#ps_clean_3_df  <- read.csv(file.path(path, "clean_data/taxonomy/ASV_8450_phyloseq_nonsingletons_noB.csv"))
pseq_rrfb <- readRDS(file.path(path, "clean_data/statistics/pseq_rrfb.rds")) #Mirlyn object from Method B
rarefied_phyloseq <- readRDS(file.path(path, "clean_data/statistics/rarefied_phyloseq.rds"))

# Load ps_melt
#ps_melt <- readRDS(file.path(path, "clean_data/statistics/ps_melt.rds"))

#### Matrices ####
# Initial matrices, before rarefaction
# ASV abundance matrix
# Select randomized samples for beta diversity rarefaction
# A total of 84 samples result from method B
final_names_methodB <- sample_names(pseq_rrfb[[1]]) # Sample names

# # Matrix
# Simple Matrix of 84 samples from Method B pipeline
asv_matrix <- otu_table(ps_clean_3) |> # ASV matrix
  as.data.frame() |>
  select(contains(final_names_methodB)) |> # Samples from method B randomization
  as.matrix()

# Load
rrfy_hell_matrix <- readRDS("clean_data/statistics/rrfy_hell_matrix.rds")

# Mean Hellinger transformation of rarefied data sets
# For Mantel tests
# set.seed(433)
# asv_avgdist <- avgdist(t(asv_matrix),
#                        sample = 750,
#                        distfun = vegdist,
#                        dmethod = "hellinger", #Transformation, later Bray_Curtis
#                        meanfun = mean,
#                        iterations = 50) |>
#   as.matrix()
# 
# # Save
# saveRDS(asv_avgdist, file = "clean_data/statistics/asv_avgdist.rds")

# Load  
asv_avgdist <- readRDS("clean_data/statistics/asv_avgdist.rds") 

# # Adding column and rownames
# rownames(asv_avgdist) <- final_names_methodB
# colnames(asv_avgdist) <- final_names_methodB
# 
# # Geographical matrix
# geo_distm <- distm(plant_traits |>
#                       filter(Unique_ID %in% final_names_methodB) |>
#                       column_to_rownames(var = "Unique_ID") |>
#                       select(Longitude, Latitude), fun = distVincentyEllipsoid)
#                       
# # Adding column and rownames
#rownames(geo_distm) <- final_names_methodB 
#colnames(geo_distm) <- final_names_methodB  

# Save
#saveRDS(geo_distm, file = "clean_data/statistics/geo_distm.rds")
# Load
geo_distm <- readRDS(file.path(path, "clean_data/statistics/geo_distm.rds"))

# Traits for dbRDA
dbrda_hell_matrix <- rrfy_hell_matrix |>
  column_to_rownames(var = "X") |>
  select(-c(1, 233:256))

dbrda_traits <- rrfy_hell_matrix |>
  select(X, Unique_ID, Site, Species, Elevation_m, Elevation_cat, Sample_Date, logACI, logLT, logLPS, logLMA, logLBI)


#### Summary stats about the data ####

# Leaf level traits
#sum(!is.na(leaf_traits_noB$ACI)) # No missing values
#sum(!is.na(leaf_traits_noB$LT)) # No missing values
#sum(!is.na(leaf_traits_noB$LPS)) # No missing values
#sum(!is.na(leaf_traits_noB$LMA)) # No missing values
#sum(!is.na(leaf_traits_noB$LBI)) # No missing values

# Plant level FEF community
# Excludes species "B"
#sum(!is.na(plant_traits$Observed[plant_traits$Species != "B"])) # No missing values
#sum(!is.na(plant_traits$hill_1[plant_traits$Species != "B"])) # No missing values
#sum(!is.na(plant_traits$hill_2[plant_traits$Species != "B"])) # No missing values

# Functions
source(file.path(path, "functions/alpha_rfy.R"))
source(file.path(path, "functions/pval_format.R"))

#Comparisons
my_comparisons <- list(c("M. nasutus", "M. laciniatus"), c("M. nasutus", "M. guttatus"), c("M. laciniatus", "M. guttatus"))
my_comparisons3 <- list(c("LOW", "MID"), c("LOW", "HIGH"), c("MID", "HIGH"))
```

## Keywords

# Abstract

The *Mimulus* genus, commonly known as monkeyflowers, is a diverse group of flowering plants found in North and South America. These plants have been the subject of extensive research, providing insight into the underlying phenotypic and genetic adaptation that characterize their unique ecological and evolutionary features. The array of leaf functional trait variation between monkeyflowers species contribute key advantages for adapting to harsh environments. Potential microbial symbionts contributing to their ecological and evolutionary success has been overlooked. Foliar endophytic fungi (FEF), symbiotic fungi living inside leaf tissue, have been shown to alter their hosts response to environmental stress. We explored the how FEF abundance, richness, and community composition in three sympatric monkeyflowers responded to changes in leaf functional traits across an elevation and geographical gradient in the Sierra Nevada, CA, USA. Specifically we asked: Q1) Are FEF community patterns correlated with leaf functional traits and/or elevation gradient? Q2) How does FEF community composition differs in response to geographic distance at the genus and host species level? Q3) Are there differences in leaf functional traits and FEF communities *among* sympatric *Mimulus* spp. populations? Q4) Do leaf functional traits and FEF communities differ *between* species along an elevational gradient? We collected individuals from natural populations across the Sierra Nevada, measured leaf mass per area, thickness, toughness, lobeness, and athocyanin content. Through the use of linear models and distance-based Redundancy Analysis (dbRDA) we found a significant correlation of FEF communities with leaf lobeness, host species, and elevation, emphasizing the environmental determinants of fungal community composition. Furthermore, the significant correlation between FEF community dissimilarity and geographical distance provide insight into the spatial dynamics of fungal endophyte distribution associated with different host species. We detected the prevalence  of *Vishniacozyma victoriae*, *Cladosporium herbanum*, and *Cladosporium* spp. across all sites and host species, underscoring the stability of certain fungal groups within these environments. The presence of *V. victoriae* might be indicative of its potential role in the local adaptation of *Mimulus* to cold and high elevation environments. Our findings offer valuable insights into the intricate interactions between fungal endophyte communities, plant traits, and elevation, with implications for ecological and evolutionary studies in the *Mimulus guttarus* species complex.


In this study, we have delved into the intricate relationship between leaf functional traits, fungal endophyte communities, and elevation. Our research has shed light on the correlations between elevation and leaf traits, such as leaf toughness, thickness, and specific leaf area. These findings underscore the significant impact of environmental factors on plant physiology.   Moreover, our investigation into fungal endophyte diversity has revealed a clear association between elevation and alpha diversity measures. The decrease in diversity with increasing elevation suggests the influence of elevation on fungal endophyte communities associated with these plant species. The presence of core taxa members across all sites and host species underscores the stability of certain fungal groups within these environments.

The distance-based Redundancy Analysis (dbRDA) has demonstrated the influence of leaf lobation, host species, and elevation on fungal endophyte communities, emphasizing the environmental determinants of fungal community composition. Furthermore, the significant correlation between FEF community dissimilarity and geographical distance provides insights into the spatial dynamics of fungal endophyte distribution associated with different host species.

Overall, our findings offer valuable insights into the intricate interactions between plant traits, fungal endophyte communities, and environmental factors, with implications for ecological and evolutionary studies in alpine ecosystems.



# Introduction

Phenotypic plasticity and genetic adaptation are key drivers of evolution, and both processes may aid in plant adaptation to a warming climate [@jump2005]. Plant’s colonization of land across multiples climates has been aided by their parallel evolution with fungi and bacteria; however, little is known about how plant microbiomes influence or are influenced by local adaptation or phenotypic plasticity of plants. Lack of knowledge about this is a problem because ecology aims to predict how plant distribution may change as the climate becomes further altered. Previous studies have suggested that foliar endophytic fungi (FEF) can alter plant traits under stressful conditions such as drought [@song2016]. FEF live in plant leaves and they may contribute to local adaptation and/or phenotypic plasticity. Host genetics may shape the foliar microbiomes of plants. For example, a study on the classical plant model, *Arabidopsis thaliana*, revealed that bacterial and fungal communities in leaves are shaped by host genotype, at least for the most common OTUs [@horton2014]. Another ideal model system to explore the interactions between leaf traits and FEF are the yellow monkeyflowers in the *Mimulus guttatus* species complex. Over the last 2 decades, the *M. guttatus* species complex has become a model system for answering questions about local adaptation and phenotypic plasticity [@wu2008; @yuan2019]. Experimental manipulation is relatively easy due to its small genome (about 430 Mb), short generation time, high fecundity, self-compatibility, and ease of greenhouse propagation [@society2019; @wu2008] Currently, studies of the *M. guttatus* species complex focus on the genetic and environmental factors driving local adaptation and phenotypic plasticity. The evolution of leaf shape for 3 edaphic species in the *M. guttatus* complex is controlled by overlapping genetic regions [@ferris2015]. Ferris et al., [-@ferris2015] points to multiple events of leaf shape evolution in the *M. guttatus* species complex and their associated habitats. Recent work has narrowed the genetic architecture at play in incomplete reproductively isolated sympatric populations of *Mimulus laciniatus* and *Mimulus guttatus*, shedding light on the location of quantitative trait loci (QTL) for the first flower node, flowering time, corolla width, corolla length, and leaf shape and suggesting that large-effect loci underlie these traits [@ferris2017]. There is scarce research that focuses on the symbionts of *Mimulus* spp. Beslile et al. [-@beslile2012] reported on the distribution of diverse fungal communities in the flower nectar of *Mimulus aurantiacus*. The authors considered flowers as islands in a metapopulation system and found that the frequency of micro fungi (i.e., yeasts) was significantly correlated to the location of the plant and marginally correlated with the density of the flowers in the plant [@beslile2012]. To our knowledge, no previous studies have considered symbionts in leaf tissue of *Mimulus* spp. and how leaf functional traits influence symbiont community composition. Given the potential benefits FEF can provide their hosts under stressful conditions (CITE) and the wide range of habitats the *M. guttatus* species complex occupies, it is important to understand the role of FEF communities play in *Mimulus* spp. The aim of this study was to explore some baseline questions about the FEF communities in sympatric populations of *Mimulus* spp.along an elevation gradient. We formulated the following questions: 
<!-- Q1) Are FEF community patterns correlated with leaf functional traits and/or elevation gradient? Q2) How does FEF community composition differs in response to geographic distance at the genus and host species level? Q3) Are there differences in leaf functional traits and FEF communities *among* sympatric *Mimulus* spp. populations? Q4) Do leaf functional traits and FEF communities differ *between* species along an elevational gradient?   -->
We expected the abundance, diversity, richness, and community composition of FEF would be more similar among the same sites (alpha diversity) than between sites (beta diversity) regardless of host species.

TALK ABOUT THE EXPANDED PHENOTYPE

new order of questions 
Q1) Are there differences in leaf functional traits and FEF communities *among* sympatric *Mimulus* spp. populations along an elevation gradient?
Q2) Are FEF community patterns correlated with leaf functional traits and/or elevation gradient?
Q3) How does FEF community composition differs in response to geographic distance at the genus and host species level?*


# Materials and Methods

## Sample Collection

We collected plant specimens during April-July 2021 and 2022 from populations of *M. guttatus*, *M. laciniatus*, and *M. nasutus* (syn. *Erythranthe guttata*, *Erythranthe laciniata*, and *Erythranthe nasuta*) across Stanislaus National Forest (SNF), Sierra National Forest (SINF) and Yosemite National Park (YNP), CA, USA. <!-- You should create a table of each location and description of every population that you sampled for this paper. That table should be cited here. -->  We haphazardly selected sites close to the main roads based on the presence of a viable population with at least \~ 50 individuals per species. Samples collected from YNP were collected from non-wilderness areas on the side of the road. We determined population viability ensuring that they had individuals flowering or close to flowering stage. We collected between 5 - 20 individuals per species from a total of 25 sites (Table 1). We selected individuals that possessed healthy looking leaves and no visible signs of pathogen damage or senescence. At sites where two species were present, we collected individuals that were at least \~ 25 meters apart. We collected sample specimens by carefully uprooting the plant and placing into individual plastic bags (e.g., Ziploc®) and preserving in an ice chest until return to the field laboratory at the UC Merced Yosemite Field Station, YNP, CA, USA. Plant specimens were processed within 8 hrs of collection.

## Leaf traits measurement

From each plant, we measured leaf traits: leaf thickness (LT), leaf punch strength (LPS), leaf mass per area (LMA), anthocyanin content index (ACI) which are known to be associated with FEF communities [@tellezTraits2022] as well as leaf lobe index (LBI) [@ferris2015]. We cleaned plants with tap water to remove all soil and debris remnants from the leaves and roots. We removed all healthy leaves (\~ 5 - 10) from the stems and took three measurements per trait from three haphazardly selected leaves from individual plants, with the exception of LBI, only one leaf per plant. We used a transparency film to hold the leaf in place and flatten, after which we took a digital photograph for further analysis. To calculate the LBI, we followed [-@ferris2015]. Briefly, leaf lobing is calculated as the convex hull area minus the true leaf area divided by convex hull area of a digital photograph of a leaf in ImageJ [v1.52r; @schneider2012]. We measured ACI content with ACM-200plus (Opti-Sciences Inc. Hudson, New Hampshire, U.S.A.) on haphazardly selected locations of the leaf surface (working from the petiole out to the leaf tip) [@tellezTraits2022]. The ACM-200 calculates an ACI value from the ratio of % transmittance at 931 nm/% transmittance at 525 nm [@opti-sciencesinc], effectively accounting for leaf thickness. We measured LT (μm) with a Mitutoyo 7327 Micrometer Gauge (Mitutoyo, Takatsu-ku, Kawasaki, Japan) on haphazardly selected locations of the leaf lamina, taking care to avoid major and secondary veins. We used an Imada DST-11a digital force gauge (Imada Inc., Northbrook, IL, United States) to measure LPS, a measure of leaf toughness, on the lamina of each leaf selected, avoiding minor leaf veins when possible [@tellezTraits2022]. It functions by conducting punch-and-die tests with a sharp-edged cylindrical steel punch (2.0 mm diameter) and a steel die with a sharp-edged aperture of small clearance (0.05 mm). Once LPS was measured, we used a 4 mm diameter punch hole to puncture disks for LMA measurements. We collected one disk per leaf (see Supplementary material for details). The disk punches dried were shipped to Tulane University, New Orleans, LA, USA to dry at 60 ℃ for 48-72 hours before being weighed.

## Molecular Work

### Tissue preservation

Upon completion of the leaf traits measurements, we prepared and preserved samples at the UC Merced Yosemite Field Station. We started by removing the main vein and margins from photosynthetic tissue. The leaf lamina was haphazardly cut with a sterile blade into 2 mm wide strip in parallel to the main vein [@arnold2003; @tellezTraits2022; @higgins2014]. Leaf strips were then sterilized with sequential washes in 95% EtOH (10 s), 0.5% sodium hypochlorite (NaOCl) (60 s), and 70% EtOH (60 s) and air dried under sterile conditions. Due to the small size of monkeyflower plants, the maximum amount of leaf lamina was preserved in sterile 15 mL tubes with \~ 10 mL CTAB solution (1 M Tris–HCl pH 8, 5 M NaCl, 0.5 M EDTA, and 20 g CTAB). The leaf tissue in CTAB solution was used for amplicon sequencing (described in detail below). All leaf tissue handling was performed in a sterile environment with an alcohol burner lamp inside a portable biosafety cabinet. All surfaces were previously sterilized sequentially with 0.5% NaOCl, 95% EtOH, and 70% EtOH. We surface sterilized surfaces and instruments in between sample handling to prevent cross contamination.

### Amplicon sequencing

We stored leaf tissue in CTAB solution for 2 months at room temperature before extracting DNA at Tulane University. To prepare for sample DNA extraction procedure, we decontaminated all instruments, materials, and surfaces in biosafety cabinet with 0.5 % NaOCl, 70 % EtOH, and 95% EtOH, and subsequently treated with UV light for 30 minutes. We subsampled 0.2 - 0.3 g of leaf tissue from each sample and placed into a sterile 2 mL tubes containing an assortment of beads: 3.2 mm stainless steel beads (Next Advance, Cat# SSB32), 100 µL stainless steel bead blend, 0.9-2.0mm (NextAdvance, Cat# SSB14B) and 2-3 of the autoclaved 2 mm zirconium oxide beads (Next Advance, Cat# ZRoB20). The 2 mL tubes with beads were previously prepared. We then proceeded to lyophilize samples for 72 hours to fully remove CTAB content from tissue. After, we submerged the sample tubes in liquid nitrogen for 30 s and homogenized samples at 30 Hz for 3 minutes in a TissueLyser LT (QIAGEN, Valencia, CA, USA). We stored samples in 20 ℃ until DNA extraction procedure.

We used a DNA extraction protocol for high-molecular weight DNA extraction adapted from Russo et al., [-@russo2022]. Briefly, it is a CTAB:chloroform:isoamyl extraction combined with a solid-phase reversible immobilization (SPRI) bead step [@russo2022; @rohland2012; @liu2023]. Protocol modifications allowed us to optimize extractions for fungal DNA from preserved leaf tissue [see details in @aponterolon2023]. After all genomic DNA was extracted, we quantified the DNA using Quant-iT® dsDNA HS Assay kit with Qubit Flourometer (Thermo Fisher Scientific, Waltham, MA, USA., Cat# Q33120) and followed a two-step amplification approach described by Sarmiento et al. [-@sarmiento2017] and U'Ren & Arnold [-@uren2017]. We used standard primers ITS1F [@gardes1993] and ITS2 [@inbook] modified with the Illumina TruSeq adaptor (see Supplementary Material). Every sample was amplified in three parallel reactions at the annealing temperatures 52 ℃, 54 ℃, and 56 ℃ to amplify a wide range of fungal taxa and reduce amplification bias for short ITS sequences [@uren2017; @lumibao2018]. Each PCR (PCR1) reaction contained 2 µL of sample DNA template. We visualized PCR1 reactions with SYBR™ Safe DNA Gel Stain (Thermo Fisher Scientific, Waltham, MA, USA., Cat# S33102) on 2% agarose gel [@oita2021]. We combined 5 µL of amplicon product from parallel reactions into a single tube per sample and purified using Sera-Mag™ SpeedBead Carboxylate-Modified Magnetic Particles (Hydrophobic) (Thermo Fisher Scientific, Waltham, MA, USA., Cat#09-981-123) prepared as per [-@rohland2012 and -@liu2023] and used a ratio of 1.2x:1 with 80% EtOH following manufacturer's instructions. We used 3 µL of PCR1 product from samples, DNA extraction controls, and PCR1 negative controls for a second PCR (PCR2) with barcoded adapters (IDT, Coralville, Iowa, USA). Each PCR2 reaction (total 30 µL) contained 1X Phusion Flash High Fidelity PCR Master Mix (Thermo Fisher Scientific, Waltham, MA, USA., Cat# F548L), 0.075 µM of barcoded primers (forward and reverse pooled at an initial concentration of 2 µM) and 0.20mg/mL of BSA (Thermo Fisher Scientific, Waltham, MA, USA., Cat# B14) following [-@sarmiento2017 and -@uren2017]. Before final pooling for sequencing, we purified and concentrated amplicons using SPRI beads to a total volume of 20 µL. We quantified PCR2 product with Quant-iT™ PicoGreen™ dsDNA Assay Kit (Thermo Fisher Scientific, Waltham, MA, USA., Cat# P7589) with the BioTek Synergy LX plate reader (Agilent, Santa Clara, CA) and combined equimolar amounts of libraries, including DNA extraction controls, PCR1, and PCR2 negative controls into a 10nM library pool. We did not detect any contamination visually or fluorometrically. Libraries were sequenced on the Illumina MiSeq platform with Reagent Kit v3 (2 \u00D7 300 bp) at Duke Genome Sequencing and Analysis Core Facility (Durham, NC, USA). Throughout all these steps, we used a separate set of sterile pipettes, tips, and equipment to reduce contamination in a designated PCR area to restrict contact with pre-PCR materials [@oita2021].

### Bioinformatic analyses

We assessed the quality of the reads using FastQc v0.12.1 [ v0.12.1; @andrews2010] and MultiQC [@ewels2016] tools. A total of 60,696,808 total ITS1 reads yielded from 343 (including 27 controls) libraries sequenced in two separate sequencing runs. The first sequencing event yielded 32,117,684 and the second 28,579,124 ITS1 reads. We tailored the open-source DADA2 bioinformatic pipeline for our data set [@callahan2016]. Based on our initial quality assessment, both forward and reverse reads were of low quality, with base calls deteriorating after 100 bp. We filtered our reads for ambiguous calls before removing the adapters by using `filterAndTrim` function and argument `maxN = 0` from the `dada2` package [v1.28.0; @callahan2016]. We removed forward and reverse primer adapters (and their reverse compliments) and eliminated reads shorter than 20 bp using the `cutadapt` tool [v4.6, @martin2011]. After removing ambiguous calls and forward and reverse primers, we assessed the quality of the reads again and saw slight improvement. We proceeded to apply stringent filter and truncation parameters to ensure quality of reads when assigning taxonomy. We filtered and truncated reads based on maximum expected errors (maxEE) rather than read length as it provides a reliable quality filtering [@edgar2015]. For this we set set the arguments `trunQ = 2`, `maxEE = c(2,2)` for forward and reverse reads, and minimum read length of 50 bp with `minLen = 50` in the used the `filterAndTrim` function [@callahan2016]. These parameters eliminated 151 samples from our data set, all from our second sequencing event. After this filter, we dereplicated reads with the `derepFastq` function and merged pairs using `mergePairs` functions with an overlap of 20 bp, minimum. We then inferred composition of the samples with `dada` function, which applies the DADA algorithm [@callahan2016; @rosen2012]. We removed chimeras via the "consensus"method with the `removeBimeraDenovo` function and ultimately we used the `assignTaxonomy` function to assign taxonomy the amplicon sequence variants (ASV) referenced against the UNITE database [@abarenkov2023a]. After taxonomy assignment we used the `phyloseq` package [@mcmurdie2013] to create a phyloseq object for downstream analyses.

We used the `decontam` package [v1.20.0; @davis2018] to statistically determine which ASVs are likely contaminants based on their frequency in our samples and remove them using `prune_taxa` function from the `phyloseq` package [v1.44.0; @mcmurdie2013]. After which, we calculated the average read count found in DNA and PCR extraction controls, considered to be laboratory contaminants, and subtracted that from the samples' read counts. We then used custom scripts to remove any ASV that represented less than 0.1% of the abundance per sample on the assumption that it originates from contamination throughout handling of samples in the DNA and PCR processes. We removed singleton ASVs with the `prune_taxa` function [@mcmurdie2013]. All post-quality bioinformatic steps were performed in *R* [v.4.3.2; @rcoreteam2024].

## Statistical Analyses

### Community Diversity

To account for uneven sampling effort and over-representation of sequences, we normalized libraries by repeated rarefying, following Cameron et al. [-@cameron2021]. We determined a sequence depth of 750 by calculating Good's coverage and qualitative evaluation of libraries to determine a balanced coverage and breadth of samples [@schloss2024]. This approach allowed for a proportionate representation of observed sequences from host species and a robust characterization of random variation inherent in rarefaction of small libraries [@cameron2021; @schloss2024]. First, we randomly selected 136 samples out of the 157 that resulted from the bioinformatic pipeline (refer to the Results section below). The sample pool was reduced to 136 to match the theoretical reduction of one sample per site (*n* = 21). We generated 50 rarefied abundance matrices without replacement by using the `mirl` function from the `mirlyn` package [@cameron2021]. After which, we calculated alpha diversity per sample as Hill orders, the observed richness (𝑞 = 0), the exponent of Shannon's entropy (𝑞 = 1), and the Inverse Simpson's Diversity (𝑞 = 2) by applying a modified version of the function `alphadivDF`[@cameron2021], which wraps the common diversity indices in `vegan` [@oksanen2022] (see custom script in Supplementary material). Finally, for beta diversity analyses, we performed a Hellinger transformation on the rarefied abundance matrices and calculated a Bray-Curtis dissimilarity matrix for each.

 We calculated simple linear regressions understand how different measures of alpha diversity changed in response to elevation. To answer how FEF communities differ *among* host species (Q1) and *between* sites (Q2) and facilitate our understanding of the effects of elevation on FEF communities, we categorized elevation as "low" (\< 1219 m.a.s.l), "mid" (1220 - 1828 m.a.s.l.) and "high" (\> 1829 m.a.s.l.). Additionally, we applied a distance-based Redundancy Analysis (dbRDA) on the Bray-Curtis dissimilarities to statistically compare the FEF community similarities within each host species per site (Q3). Its visualizations effectively portray underlying patterns of compositional differences [@anderson2017; @legendre1999; @mcardle2001], akin to permutational analysis of variance. We calculated Spearman's rho for all leaf traits (see below and Fig. S1) and informed our selection of leaf traits with results from the PCA (see below and Fig. 1), and selected those with the lowest correlation coefficient per host species: logLBI. Our initial dbRDA model consisted of terms logLBI, sampling date, site, and elevation (m). The leaf functional trait data, as well as elevation, was not randomized or subsampled to match rarefied dataset, the same values applied to all 50 rarefied matrices. For our initial model, we determined the variance inflation factor (VIF) of each term with function `vif.cca` and eliminated redundant ones: site and sampling date. We performed manual model selection by evaluating the marginal significance of constraining variables after 999 permutations with function `anova.cca` [@legendre2011; @legendre2012; @oksanen2022]. We corroborated homogeneous dispersion of variances with a permutational analysis of multivariate dispersion (PERMDISP) using the `betadisper` with parameter `type = "median"`, and `permutest` functions from `vegan`, the latter with 999 permutations [@oksanen2022]. We used a post-hoc Tukey's test to compare the differences in the dispersion of the FEF communities among sites and elevation categories. We used the `simper` function from `vegan` to discriminate which species contribute the most to compositional differences between groups [@oksanen2022]. To determine if there is a core FEF community associated with host species or elevation categories, we conducted an indicators species analyses (ISA) using the `multipatt` function from the `indicspecies` package [@decaceres2009].

To assess correlations between pairwise FEF community dissimilarity and the geographical distance matrix per host species (Q4), we computed a Mantel tests with Spearman's rho and 999 permutations using the `mantel` function [@oksanen2022]. For this test, we opted for a less taxing computational approach and rarefied sequences with the same parameters as before and calculated Hellinger transformations with the `avgdist` function [@oksanen2022]. We then calculated the Bray-Curtis dissimilarity with `vegdist` [@oksanen2022]. For the geographical distances between sites, we used `distm` function with the Vicenty (ellipsoid) method from the `geosphere` package [@hijmans2022].

### Leaf traits

We checked for normality and homoscedasticity of the leaf traits measured. We used Shapiro-Wilk and Fligner-Killen tests from the `stats` package [@rcoreteam2024] to check for normality and homoscedasticity, respectively. We established that the leaf funtional trait data was not normally distributed and not homoscedastic. We then used non-parametric tests, the Wilcoxon Rank Sum test, to compare leaf functional trait means among species and sites to answer the first portion of Q1 and Q2. We used the `compare_means` and `stat_compare_means`functions from the `ggpubr` package [@kassambara2023] to perform these tests and properly visualize them. We adjusted *p* values to account for false discovery rates in multiple comparisons by using “BH” method [@benjamini1995]. We performed Principal Component Analysis (PCA) to understand patterns and relationships among leaf traits of host species. We used the `prcomp` function from the `vegan` package [@oksanen2022] compute the PCA analysis with variables ACI, LT, LPS, LMA, and LBI, all log-transformed. We used only complete raw leaf functional traits measurements to compute the PCA analysis (*n* = 504), samples with missing values were omitted.  All statistical analyses were performed in *R* programming language [v.4.3.2; @rcoreteam2024]. We present the log-transformed leaf functional trait data at the leaf level: ACI (*n* = `r sum(!is.na(leaf_traits_noB$logACI))`), LT (*n* = `r sum(!is.na(leaf_traits_noB$logLT))`), LPS (*n* = `r sum(!is.na(leaf_traits_noB$logLPS))`), LMA (*n* = `r sum(!is.na(leaf_traits_noB$logLMA))`), LBI (*n* = `r sum(!is.na(leaf_traits_noB$logLBI))`). The FEF community data is presented at the plant/sample level (*n* = `r sum(!is.na(plant_traits$Observed))`).


# Results

We obtained 5,082,229 reads representing 726 ASVs from 174 samples after processing samples through the DADA2 pipeline. The raw reads obtained were composed of 26.81% Ascomycota, 71.53% Basidiomycota, \<0.05% Chytridiomycota, \<0.5% Mortierellomycota, \<0.03% Olpidiomycota, 0.01% Rozellomycota, \<0.001% Aphelidiomycota, and 1.19% missed hits. After decontamination, and removal of singletons we obtained 4,856,220 reads representing 231 ASVs from 157 samples composed of 26% Ascomycota, 73% Basidiomycota, 0.01% Chytridiomycota, \<0.1% Mortierellomycota, 0.03% Olpidiomycota, \<0.002% Rozellomycota and \<1.0% unknown reads (Fig. 1 and Fig. S2). The presence of Ascomycota (92%) and Basidiomycota (97%) was consistent in samples across all sites and host species in the un-rarefied data (Table ??). Three core taxa members were detected in the un-rarefied data: *Vishniacozyma victoriae* (Basidiomycota, ASV_1), *Cladosporium herbanum* (Ascomycota, ASV_2) and *Cladosporium* spp. (Ascomycota, ASV_7). The rarefied data contained three more core taxa: Dyszogia patagonica (ASV_3), *Filobasidium chernovii* (Basidiomycota, ASV_5), and *Alternaria tenuissima* (Ascomycota, ASV_8) (Fig. S2). The following section reports on results from the rarefied data sets.

To determine the correlation between FEF diversity and elevation, we calculated simple linear regressions between elevation and alpha diversity (Q1). At the genus levels, we observed the complete data set we did see a statistically significant negative correlation between elevation and observed richness (𝑞 = 0) (R^2^-adjusted \< .01, *F*~1,4198~= 16.69, *p* \< .001), the exponent of Shannon's entropy (𝑞 = 1) (R^2^-adjusted \< .01, *F*~1,4198~= 37.91, *p* \< .001), and the Inverse Simpson's Diversity (𝑞 = 2) (R^2^-adjusted \< .01, *F*~1,4198~= 23.73, *p* \< .001). At the species level, we observed a significant decrease as elevation increased in all alpha diversity measures (Fig. S2A - S2C), with the exception of *M. guttatus* which had no significant change in Hill orders 1 and 2 (Fig. 2B - 2C). The alpha diversity measures from rarefied data showed significant differences between all host species, except *M. laciniatus* and *M. nasutus* in Hill order 1 (𝑞 = 1, *p* \> .05, Fig. 3B). We observed a similar pattern in beta diversity between elevation sites (Fig. 3D -3C). We saw no differences in beta diversity between low and mid elevation sites for Hill order 2 (𝑞 = 2, *p* \> 0.05, Fig. 3F).

**New model m5 has 22% of the overall variance** 
To test for differences in FEF community composition, we used a distance-based Redundancy Analysis (dbRDA) to model the relationship between FEF communities, leaf functional traits and elevation (Q3). The best fit model revealed that 17% of the overall variance in FEF communities was accounted for by log-transformed LBI, host species, and elevation, the constraining variables. We saw that the first axis (dbRDA1) explained 65.8% and the second axis (dbRDA2) explained 15.3% of the constrained variance (Fig. 4). We observed a distinct, yet overlapping, grouping of FEF communities by species (Fig. 4A), as well as when visualized by elevation category (Fig. 4B). Elevation tracks along the dbRDA1 axis while logLBI is diagonal to the axes (Fig. 5). We found that LBI and elevation are significantly correlated with FEF communities (PERMANOVA TABLE COMMING SOON). To corroborate our findings, we used a permutational analysis of multivariate dispersion (PERMDISP) to test for homogeneity of variances in FEF communities. We found that FEF communities were homogeneous across all species (*F*~2,4197~= 320.3, *p* < .001). The post-hoc Tukey's test revealed that all species comparison differences were statistically significant at ⍺ = 0.05. We detected significant differences in the dispersion of FEF communities by elevation category (*F*~2,4197~= 228.1, *p* \< .001). The post-hoc Tukey's test showed that all elevation categories had significant differences in the dispersion of FEF communities at ⍺ = 0.05. Finally, we tested for FEF community dissimilarity by geographical distance and found a statistically significant positive correlation when we observed all host species (*r* = .07, *p* \< .05, Fig. 5A). At the host species level, we saw a significant correlation between FEF community and geographical distance for *M. laciniatus* (*r* = 0.27, *p* \= .01, Fig. 5A) and *M. nasutus* (*r* = .29, *p* \< .01, Fig. 5B) . For *M. guttatus* we saw a negative correlation between FEF communities and geographic distance (*r* = -.004, *p* = .48, Fig. 5B).

Our PCA analysis showed how leaf functional traits were related (Q3-Q4). We plotted leaf functional traits according to species groups on the PCA axes to show how the variance in the complete data set is explained by PC1 (42.57%) and PC2 (23.27%) (Fig. 6). The PCA analyses showed correlations between ACI, LT, LPS, and LMA as loadings tracked along PC1 towards positive values (Fig. 6). We observed that LBI loading is orthogonal along PC2 to the other traits, indicative of low correlation. We note distinct groupings by species along PC2 such that *M. laciniatus*, the most lobed species, is distinct from *M.gutatus* and *M. nasutus*. The latter two overlap along PC1 and PC2 (Fig. 6).

We found that leaf functional traits differed among and within *Mimulus* species across elevation (Fig. S4 - S8). For LMA, when we observed all host species, we saw a statistically significant positive correlation between LMA and elevation (R^2^-adjusted = .041, *p* \< .001, Fig. S4A). When we observed this relationship with categorical elevation, we found that species do not differ in LMA values at low elevations (Fig. S4B). At mid elevations, *M. laciniatus* and *M. guttatus* have statistically significant differences in LMA (*p* \< .001), while at high elevation this difference dissipates. At high elevation we saw that *M. nasutus* differs significantly from both *M. laciniatus* and *M. guttatus* (*p* \< .0001, Fig. S4B). For ACI, when we observed all species, we found no correlation with elevation (R^2^-adjusted \< -.000, *p* \< .0001, Fig. S5A). But when we observed the elevation categories we saw that *M. laciniatus* had statistically significant differences (*p* \< .0001) from *M. nasutus* and *M. guttatus*, while the latter two did not differ (Fig. S5B). At mid elevation we saw that *M. laciniatus* and *M. guttatus* had statistically significant differences (*p* \< .0001), while at high elevations *M. laciniatus* had significantly lower levels (*p* \< .0001) of ACI than *M. nasutus*, and *M. guttatus* (*p* \< .01, Fig. S5B). We also saw statistically significant differences between *M. nasutus* and *M. guttatus* at high elevations (*p* \< .0001)(Fig. S4B). The LBI trait is a measure of leaf "lobeness" and it is confounded with species, since not all host species exhibit the trait plasticity with elevation change. Regardless, our comparisons show that LBI is significantly correlated with elevation (Fig. S6A). Our categorical comparison shows that *M. laciniatus* had statistically significant greater values of LBI compared to *M. nasutus* and *M. guttatus* at all elevation categories (Fig. S6B). At low elevations, *M. nasutus* and *M. guttatus* did not differ, but they did have significant differences at high elevations (p \< .0001, Fig. S5B). Our measure of leaf toughness, LPS, was significantly positively correlated with elevation (R^2^-adjusted = .004, *p* = .032, Fig. S7A). At low elevations we saw a statistically significant difference in LPS between *M. nasutus* and *M. guttatus* (*p* \< .01), while at mid elevations *M. laciniatus* and *M. guttatus* showed a similar pattern (*p* \< .0001, Fig. S7B). At high elevations we only saw significant differences between *M. laciniatus* and *M. nasutus* (*p* \< .01, Fig. S7B). Finally, we saw a significant positive correlation between LT and elevation (R^2^-adjusted = .013, *p* \< .0001), when we observe all species together (Fig. S8A). We only see statistically significant differences between *M. laciniatus* and *M. nasutus* at low elevations(*p* \< .05), while at mid we see significant differences between *M. laciniatus* and *M. guttatus* (*p* \< .0001) and at high elevations as well (*p* \< .0001, Fig. S8B). At high elevations, *M. guttatus* and *M. nasutus* also show significant differences (*p* \< .0001, Fig. S8B).



# Discussion


Our dbRDA results (Fig. 4) indicate that LBI, host species, and elevation, account for 17% of the variance in FEF community composition. Subsequent PERMDISP analyses also support significant differences in FEF community composition between host species and at low, mid, and high elevations. Further insight from our Mantel tests indicate a significant correlation between FEF community dissimilarity and geographical distance at the genus level, rather than at the host species level, providing additional evidence in support of spatial driven differences in FEF community composition in *Mimulus*. Our findings, overall support the idea that distinct FEF communities are structured by the interplay of host species and elevation.
We saw a consistent prevalence of *Vishniacozyma victoriae*, *Cladosporium herbanum*, and *Cladosporium* spp. in un-rarefied and rarefied data across all sites and samples. Cladosporium spp. is a well documented environmental fungi that occur in fading or dead leaves of herbaceaus and woody plants [@samson2004; @schubert2007]. The basidiomycetous yeast *V. vitoriae* (formerly *Cryptococcus vistoriae*) is also a well known environmentally abundant fungi capable of causing respiratory issues [@rush2023]. It was first isolated in the Antarctic [@montes1999] and has since been detected worldwide [@demenezes2019]. Despite potential respiratory health detriments, *V. victoriae* has been utilized in agricultural settings for the post-harvest control of fruit diseases [@lutz2020]. It thrives at low temperatures (15 °C), but it is known to tolerate a variety of environmental conditions, and lacks a polysacharide capsule, which is thought to contribute to its lack of pathogenicity [rush2023]. It applications in wheat agriculture suggest that kernel weight is influenced by *V. victoriae*'s coexistence with other plant acquired endophytic fungi [@vujanovic2021]. Its presence might serve as an indicators of wheat's kernel resistance to pathobiota [@lutz2020]. It is proposed that through the production of various bio-active compound, it can contribute to plant growth and ecological adaptation to cold environment [@vujanovic2021; @buzzini2018]. According to Vujanovic [-@vujanovic] and  Ogaki et al. [-@ogaki2020], no antagonism has been detected between *V. victoriae* with other yeasts, and plant pathogens. We are in need of further quantitative studies to confirm the existence of cold-adapted microbial taxa and their associated hosts [@marian2022]. The presence of *V. victoriae* in our samples might be indicative of its potential role in the local adaptation of *Mimulus* to cold and high elevation environments. 

The observed decline in alpha diversity and changes in beta diversity with increased elevation echoes macroecological patterns of biodiversity [@sabatini2018; @kraft2011; @villacampa2019; @jimenez-hernandez2020]. This quintessential question is still relevant to plan-microbe interactions since altitudinal gradients can serve as a proxy to predict species distribution in future climate conditions [@kazenel2019]. For microbial ecology, patterns of diversity and community composition exhibit more nuances. In an experimental setup, Kivlin et al [@kivlin2022] reported that host species (alpine grasses) was a stronger predictor of alpha diversity and community composition of leaf endophytes. In contrast, root endophyte community responded to both host species and elevation [@kivlin2022]. Our results point to significant decline alpha diversity as elevation increases, as well as significant differences in community composition due to elevation change for all host species. It is possible that this is due to different phenologies, and tissue types of herbaceous and gramineous plants. Similarly, Kezenel et al. [-@kazenel2019] to found greater change in leaf endophytes due to altitude and warming when compared to root colonizing fungi, but the direction and magnitude of responses varied among host species and fungal functional groups. A major difference in this study is the low ASV count and the use of multiple rarefied data sets compared to Kazenel et al. [-@kazenel2019]. A study by Cordier et al. [-@cordier2012] focused on the fungal phyllosphere in European beech along an elevation gradient, found that climatic variables, especially temperature, were best correlated with fungal community dissimilarities. The effect of site and sampling day was a significant factor determining fungal phyllosphere composition [@cordier2012]. While the phyllosphere of beech varies widely, Cordier et al. [-@cordier2012], found a strong affinity of fungal taxa to elevation site supporting regional spatial structure. An important distinction is that they focus on the outer and inner phyllosphere, hence observed patterns might better reflect the outer leaf dynamics, more susceptible to climatic factors, as opposed inner leaf dynamics we explore in our study. Another key difference is the host species phenology and function leaf traits of European beech compared to *Mimulus*.

Our results show how leaf functional traits differ among and within *Mimulus* species across elevation. Specifically LMA, LBI, LPS and LT, show a positive correlation with elevation at the genus level, reflecting a conserved plastic response to environmental changes along elevation. When we conducted Principal Component Analysis (PCA) (Fig 1) illustrated correlations between leaf functional traits while demonstrating the distinct groupings of *M. laciniatus*, *M. guttatus*, and *M. nasutus* based on LBI differences compared to the rest of the traits, ACI, LMA, LPS and LT. The distinct grouping of host species along LBI trait reflects findings by XXXXX and XXXXX in previous studies showing how lobed leaves are more common in alpine environments, where they are thought to be an adaptation to reduce water loss and increase heat dissipation \[CITE\]. *Mimulus laciniatus* is considered the most lobed species (Fig. 6 and Fig. S5)\[CITE all evidence here\], and thrives at higher elevation. Future investigations can help tease apart the effect of mutualist FEF on host *M. laciniatus* success in cold temperature and high elevation environments.

# Conclusions

The *Mimulus guttatus* species complex serves as a robust ecological and evolutionary model system. The identification of FEF communities in *Mimulus* spp. leaf tissue represents a substantial contribution to this field of study, opening up new avenues or inquiry. Our study uncovers potential beneficial FEFs that may contribute to the species complex's adaptation to cold environments. Future research should focus on exploring the interactions of FEF communities and *Mimulus* host genotypes that contribute to the expanded phenotype.  As well as, understanding how highly prevalent FEF taxa respond to seasonal and temporal changes and contribute to overall plant fitness. An experimental approach taking into consideration populations' phenotype and genotypes can help disentangle the effect of site and host species on FEF communities. To optimize microbial studies in *Mimulus*, it crucial to explore alternative sampling methods such as using fresh tissue or rapidly preserved tissue in liquid nitrogen, which is known to yield the best results. We also acknowledge our limited scope and urge future investigations to expand their sampling efforts per species and populations while prioritizing prompt DNA extraction to enhance FEF capture.

# Author Contributions

# Acknowledgements

# Conflict of Interest Statement

The authors declare no competing interests.

# Data Availability Statement

# References

::: {#refs}
:::

# Figures

```{r, themes}
#| echo: false
#| eval: true
#| tidy: true

#ggplot themes
# Theme for leaf trait and diversity plots: discrete
theme_lfspp_discrete <-      theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        strip.text = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_text(face = "italic"), #Make legend text italic
        axis.text.x = element_blank())

# Theme for leaf trait plots: continuous
theme_lfspp_continuous <- theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_text(face = "italic"), #Make legend text italic
        axis.text.x = element_text(size = 14),
        legend.position = "bottom")

# Theme for species by diversity  plots: discrete
theme_sppdiv_discrete <-    theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
         legend.text = element_text(face = "italic", size = 12), #Make legend text italic
         axis.text.x.bottom = element_blank(),
         axis.title.x = element_blank())

# Theme for elevation plots: discrete
theme_elevdiv_discrete <-    theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x.bottom = element_blank(),
         axis.title.x = element_blank())

# Theme for leaf trait and diversity  plots: continuous
theme_lfdiv_continuous <- theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 14),
         panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_text(face = "italic"), #Make legend text italic
         axis.text.x = element_text(size = 14))
```


## Figure 1


<!-- Seems weird to have so much Basidiomycota - how many taxa does this represent? -->

```{r, figure3}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 8
#| label: rabun_barplot
#| fig-cap: "Relative abundance of fungal phyla in raw (A) and rarefied (B) data, by species and elevation category."


#Barplots with microeco
# Quick addition traits log transformed
names_list <- colnames(ps_clean_3@otu_table) #List of samples
ps_clean_3@sam_data <- plant_traits |>
  filter(Unique_ID %in% names_list) |>
  select(c(1:12, 15:20)) |>
  mutate(X = Unique_ID) |>
  column_to_rownames(var = "X") |>
  sample_data()


# Raw data
micro_psclean <- phyloseq2meco(ps_clean_3) # First convert phyloseq to meco


t1 <- trans_abund$new(dataset = micro_psclean, taxrank = "Phylum", ntaxa = 8)
t1gg <- t1$plot_bar(others_color = "grey70", facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, legend_text_italic = FALSE, barwidth = 1, color_values = RColorBrewer::brewer.pal(8, "Set3"))
t1gg <- t1gg +   labs(title = "Raw reads") +
  theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "italic", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank())
#t1gg


# Rarefied data
micro_rarefied_ps <- phyloseq2meco(rarefied_phyloseq) # First convert phyloseq to meco

r1 <- trans_abund$new(dataset = micro_rarefied_ps, taxrank = "Phylum", ntaxa = 8)
r1gg <- r1$plot_bar(others_color = "grey70", facet = c("Species", "Elevation_cat"), xtext_keep = FALSE, legend_text_italic = FALSE, barwidth = 1, color_values = RColorBrewer::brewer.pal(8, "Set3"))
r1gg <- r1gg +
  labs(title = "Rarefied reads") +
  theme(legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold.italic", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA),
         axis.text.x = element_blank()) 
#r1gg
ggsave(filename = file.path(path, "figures/figure1b.png"), plot = r1gg, dpi=300, units=c("mm"), width=300, height=200)

# Arrange plots
ra_plots <- ggarrange(t1gg, r1gg,
                          nrow = 2, ncol = 1,
                          common.legend = TRUE, legend = "bottom",
                          labels = c("A", "B"))
ra_plots

ggsave(file.path(path, "figures/figure1.png") , plot = ra_plots, dpi=300, units=c("mm"), width=200, height=250)
```

## Figure 2

```{r, figure2}
#| echo: false
#| eval: true
#| tidy: true
| fig-width: 6
| fig-height: 7
#| label: scatter_hill_orders
#| fig-cap: "Relationship between Hill orders by host species and elevation. A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host species as elevation increases. Blue filled points correspond to *M. laciniatus*, green filled to *M. nasutus*, and yellow to *M. guttatus*.  The solid line represents the linear model fit and the shaded area represents the 95% confidence interval."

# Shannon Diversity or hill number 1
# Three main faceted plots come out of this chunk

########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("M. laciniatus", "M. nasutus", "M. guttatus")
#############################


# Hill number 0 
# Species richness or hill number 0

#Linear model summary
#summary(lm(Observed ~ Elevation_m, data = plant_traits_MB))
#richness_p <- format.p(cor.test(plant_traits$Observed, plant_traits$Elevation_m)$p.value) # This is just to make the p-value nicer. 
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("L", "N", "G")

# Plot
hill0_diversity <- ggplot(data = plant_traits_MB, 
                          aes(x = Elevation_m, y = Observed, color = Species)) +
   geom_jitter(aes(color = Species), 
               #stat = "summary",
               #fun = mean,
               size = 3, alpha = 0.3)+ 
   #geom_smooth(method = lm, se = F) +
  geom_smooth(method = lm, se = T, level = 0.95, na.rm = F, color = "black") +
  stat_poly_eq(formula = y ~ x, color = "black",
               aes(label = paste(#..eq.label.., 
                 ..adj.rr.label.., #"~italic(p) ==",
                 ..p.value.label.., 
                 #signif(..p.value.., digits = 4),
                 sep = "*`,`~~")), 
               rr.digits = 2,
               p.digits = 3 ,
               parse = TRUE,
               label.x = "right",
               label.y= "top",
               vstep = 0.08) +
   scale_fill_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) + 
   scale_color_manual(legend_title, values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) + 
   theme_lfdiv_continuous +
   labs(y =  "\U1D492 = 0", x = "", col = "") + 
   scale_y_continuous(expand = c(0.05, 0.05)) +
  scale_x_continuous(expand = c(0.05, 0.05)) +
  facet_wrap(~ Species) +
  guides(color = "none")        #To turn off color legend
  # annotate(geom = "text", x = 2100, y = 2.5, label = "p = 0.03", color = "black")
#annotate(geom="text", x=2100, y=50, label="p = 0.06", color = "black")

#hill0_diversity

#ggsave(filename = file.path(path, "figures/richness_elevation.png"), plot = hill0_diversity, dpi=300, units=c("mm"), width=250, height=150)

# Linear models per species
# Linear model summary
# M. laciniatus
#summary(lm(Observed ~ Elevation_m, data = plant_traits[plant_traits$Species == "L",]))
#Not significant

# M. nasutus
#summary(lm(Observed ~ Elevation_m, data = plant_traits[plant_traits$Species == "N",]))
#Not significant

# M. guttatus
#summary(lm(Observed~ Elevation_m, data = plant_traits[plant_traits$Species == "G",]))
#Not significant

# Hill number 1
# Shannon diversity or hill number 1
# Linear model summary
#summary(lm(hill_1 ~ Elevation_m, data = plant_traits_MB))
#elev_div_p <- format.p(cor.test(plant_traits$Shannon, plant_traits$Elevation_m)$p.value) # This is just to make the p-value nicer. 

# Plot
hill1_diversity <- ggplot(data = plant_traits_MB,
                          aes(x = Elevation_m, y = hill_1, color = Species)) +
   geom_jitter(aes(color = Species), 
               #stat = "summary",
               #fun = mean,
               size = 3, alpha = 0.3) + 
   geom_smooth(method = lm, se = F) + 
   geom_smooth(method = lm, se = T, level = 0.95, na.rm = F, color = "black") + 
  stat_poly_eq(formula = y ~ x, color = "black",
               aes(label = paste(#..eq.label.., 
                 ..adj.rr.label.., #"~italic(p) ==",
                 ..p.value.label.., 
                 #signif(..p.value.., digits = 4),
                 sep = "*`,`~~")), 
               rr.digits = 2,
               p.digits = 3 ,
               parse = TRUE,
               label.x = "right",
               label.y = "top",
               vstep = 0.08) +
   scale_color_manual(legend_title,
                     values = met.brewer("Isfahan2", n = 4, type = "discrete", 
                                          direction = c(-1))) + 
  labs(y = "Alpha diversity (\U1D492 = 1)", x = "Elevation (m.a.s.l.)", col = "") +
  scale_y_continuous(expand = c(0.05, 0.05)) +
  theme_lfdiv_continuous +
  #theme(axis.title.x = element_text()) +
  #theme(strip.text = element_blank()) +
  facet_wrap(~ Species) 
  #guides(color = "none")        #To turn off color legend

hill1_diversity

ggsave(filename = file.path(path, "figures/shannon_elevation.png"), plot = hill1_diversity, dpi=300, units=c("mm"), width=250, height=150)

# Linear models per species
# Linear model summary
# M. laciniatus
#summary(lm(hill_1 ~ Elevation_m, data = plant_traits[plant_traits$Species == "L",]))
#Not significant

# M. nasutus
#summary(lm(hill_1 ~ Elevation_m, data = plant_traits[plant_traits$Species == "N",]))
#Not significant

# M. guttatus
#summary(lm(hill_1 ~ Elevation_m, data = plant_traits[plant_traits$Species == "G",]))
#Not significant

# Hill number 2
# Inverse Simpson diversity or hill number 2
# Linear model summary
#summary(lm(hill_2 ~ Elevation_m, data = plant_traits))
#elev_div_p <- format.p(cor.test(plant_traits$Shannon, plant_traits$Elevation_m)$p.value) # This is just to make the p-value nicer. 

# Plot
hill2_diversity <- ggplot(data = plant_traits_MB, 
  aes(x = Elevation_m, y = hill_2, color = Species)) +
   geom_jitter(aes(color = Species), 
               #stat = "summary",
               #fun = mean,
               size = 3, alpha = 0.3) + 
   geom_smooth(method = lm, se = F) + 
   # stat_regline_equation(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = '~~~~'))) 
   geom_smooth(method = lm, se = T, level = 0.95, na.rm = F, color = "black") + 
  stat_poly_eq(formula = y ~ x, color = "black",
               aes(label = paste(#..eq.label.., 
                 ..adj.rr.label.., #"~italic(p) ==",
                 ..p.value.label.., 
                 #signif(..p.value.., digits = 4),
                 sep = "*`,`~~")), 
               rr.digits = 2,
               p.digits = 3 ,
               parse = TRUE,
               label.x = "right",
               label.y = "top",
               vstep = 0.08) +
   #scale_fill_manual(labels = c("*M. laciniatus*","*M. nasutus*", "*M. guttatus*"), 
                     #values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) + 
   scale_color_manual(legend_title, labels = c("*M. laciniatus*", "*M. nasutus*", "*M. guttatus*"), 
                     values = met.brewer("Isfahan2", n = 4, type = "discrete", 
                                          direction = c(-1))) + 
  labs(y = "\U1D492 = 2", x = "Elevation (m.a.s.l.)", col = "") +
  theme_lfdiv_continuous +
  theme(strip.text = element_blank()) +
  facet_wrap(~ Species) +
  guides(color = "none")        #To turn off color legend

hill2_diversity

#ggsave(filename = file.path(path, "figures/invsimpson_elevation.png"), plot = hill2_diversity, dpi=300, units=c("mm"), width=250, height=150)

# Linear models per species
# Linear model summary
# M. laciniatus
#summary(lm(hill_2 ~ Elevation_m, data = plant_traits[plant_traits$Species == "L",]))
#Not significant

# M. nasutus
#summary(lm(hill_2 ~ Elevation_m, data = plant_traits[plant_traits$Species == "N",]))
#Not significant

# M. guttatus
#summary(lm(hill_2 ~ Elevation_m, data = plant_traits[plant_traits$Species == "G",]))
#Not significant


###### Joined plots ######
hill_numbers <- ggarrange(hill0_diversity, hill1_diversity, hill2_diversity,
                          labels = c("A", "B", "C"),
                          nrow = 3, ncol = 1)

hill_numbers
ggsave(filename = file.path(path, "figures/figure2.png"), plot = hill_numbers, dpi=300, units=c("mm"), width=300, height=275)
```


## Figure 3

```{r, figure3}
#| echo: false
#| eval: true
#| tidy: true
#| warning: false
#| fig-width: 6
#| fig-height: 6
#| label: boxplot_hill_orders
#| fig-cap: "Alpha and beta diversity means comparisons in host species and eklevation categories. Alpha diversity means comparisons; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2) per host species. A-C) Blue filled boxplots correspond to *M. laciniatus*, green filled to *M. nasutus*, and yellow to *M. guttatus*. Beta diversity mean comparions; A) Observed ASV richness (𝑞 = 0); B) Shannon's entropy (𝑞 = 1); and C) Inverse Simpson's index (𝑞 = 2)per elevation category. D-F) Violet boxplots correspond to LOW elevation sites, pink filled to MID and light maroon to HIGH elevation sites, while squares represent *M. laciniatus* , circles *M. nasutus* and triangles *M. guttatus*.  Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

############################################
#### Alpha diversity ####
#### At the species level ####
############################################

labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("M. laciniatus", "M. nasutus", "M. guttatus")

# Plot
hill0_species <- ggplot(data = plant_traits_MB, 
  aes(x = Species, y = Observed)) +
    geom_point(
  aes(color = Species),
  alpha = 0.2,
  size = 1.7,
  position = position_jitter(w = 0.2)
) +
  geom_boxplot(
    aes(color = Species),
    alpha = 0.5,
    outlier.alpha = 0.0) +
  scale_color_manual(name = "Species", values= met.brewer("Isfahan2", n = 4, type = "discrete", direction = -1)) +
  theme_sppdiv_discrete +
  labs(y =  "\U1D492 = 0", x = "", col = "") + 
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test", 
                     label = "p.signif") 
  #guides(color = "none")        #To turn off color legend
  
#hill0_species
# annotate(geom = "text", x = 2100, y = 2.5, label = "p = 0.03", color = "black")
#annotate(geom="text", x=2100, y=50, label="p = 0.06", color = "black")


# Hill number 1
# Shannon diversity or hill number 1
# Plot
hill1_species <- ggplot(data = plant_traits_MB, 
  aes(x = Species, y = hill_1)) +
  geom_point(
  aes(color = Species),
  alpha = 0.2,
  size = 1.7,
  position = position_jitter(w = 0.2)
) +
  geom_boxplot(
    aes(color = Species),
    alpha = 0.5,
    outlier.alpha = 0.0) +
  scale_color_manual(name = "Species", values= met.brewer("Isfahan2", n = 4, type = "discrete", direction = -1)) +
  #scale_color_manual(aes(color = "black")) +
  theme_sppdiv_discrete +
  theme(strip.text = element_text(face = "bold", size = 14)) +
  labs(y =  "Alpha and Beta diversity (\U1D492 = 1)", x = "", col = "") + 
  scale_y_continuous(expand = c(0.05, 0.05)) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test", 
                     label = "p.signif") +
  facet_wrap(~ Elevation_cat)
 # guides(color = "none")        #To turn off color legend
  
hill1_species


# Hill number 2
# Inverse Simpson diversity or hill number 2
hill2_species <- ggplot(data = plant_traits_MB, 
                        aes(x = Species, y = hill_2)) +
    geom_point(
  aes(color = Species),
  alpha = 0.2,
  size = 1.7,
  position = position_jitter(w = 0.2)
) +
  geom_boxplot(
    aes(color = Species),
    alpha = 0.5,
    outlier.alpha = 0.0) +
  scale_color_manual(name = "Species", values= met.brewer("Isfahan2", n = 4, type = "discrete", direction = -1)) +
  theme_sppdiv_discrete +
  labs(y =  "\U1D492 = 2", x = "", col = "") + 
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test", 
                     label = "p.signif") 
 # facet_wrap(~ Species, labeller = labeller(Species = labels_list)) +
 #guides(color = "none")        #To turn off color legend
  
#hill2_species

# Joined plots
 hill_numbers_species <- ggarrange(hill0_species, hill1_species, hill2_species, 
                                  nrow = 1, ncol = 3,
                                  common.legend = TRUE,
                                  labels = c("A", "B", "C"),
                                  legend = "bottom")

#hill_numbers_species
#ggsave(filename = file.path(path, "figures/hill_numbers_species.png"), plot = hill_numbers_species, dpi=300, units=c("mm"), width=250, height=275)

#################################
#### Beta diversity ####
#### Across elevation ####
#################################

# Observed richness
# Hill number 0
 hill0_beta <-
   ggplot(plant_traits_MB, aes(x = Elevation_cat, y = Observed)) +
   geom_point(
     aes(color = Elevation_cat),
     alpha = 0.2,
     size = 1.7,
     position = position_jitter(w = 0.2)
   ) +
   geom_boxplot(aes(color = Elevation_cat),
                alpha = 0.5,
                outlier.alpha = 0.0) +
   scale_color_manual(name = "Elevation",
     labels = c('Low', 'Mid', 'High'),
     values = met.brewer(
       "Cassatt1",
       n = 3,
       type = "discrete",
       direction = -1
     )
   ) +
   scale_shape_manual(values = c(15:18)) +
   theme_elevdiv_discrete +
   theme(legend.text = element_text(size = 14)) +
   scale_y_continuous(expand = c(0.05, 0.05)) +
   stat_compare_means(comparisons = my_comparisons3,
                      method = "wilcox.test",
                      label = "p.signif") +
   labs(y = "\U1D492 = 0", x = "") +
   guides(fill = guide_legend(title = "Elevation"),
          shape = guide_legend(title = "Species"))

#hill0_beta

#ggsave(file.path(path, "figures/shannon_elevation.png") , plot = bbe, dpi=300, units=c("mm"), width=200, height=150)

# Hill number 1
# Shannon diversity or hill number 1
 hill1_beta <-
   ggplot(plant_traits_MB, aes(x = Elevation_cat, y = hill_1)) +
     geom_point(
     aes(color = Elevation_cat),
     alpha = 0.2,
     size = 1.7,
     position = position_jitter(w = 0.2)
   ) +
   geom_boxplot(aes(color = Elevation_cat),
                alpha = 0.5,
                outlier.alpha = 0.0) +
   scale_color_manual(name = "Elevation",
     labels = c('Low', 'Mid', 'High'),
     values = met.brewer(
       "Cassatt1",
       n = 3,
       type = "discrete",
       direction = -1
     )
   ) +
   scale_shape_manual(values = c(15:18)) +
   theme_elevdiv_discrete +
   theme(legend.text = element_text(size = 14)) +
   scale_y_continuous(expand = c(0.05, 0.05)) +
   stat_compare_means(comparisons = my_comparisons3,
                      method = "wilcox.test",
                      label = "p.signif") +
   labs(y = "\U1D492 = 1", x = "") +
   guides(fill = guide_legend(title = "Elevation"),
          shape = guide_legend(title = "Species"))

hill1_beta


# Hill number 2
# Inverse Simpson diversity or hill number 2

hill2_beta <- ggplot(plant_traits_MB, aes(x = Elevation_cat, y = hill_2)) +
  
     geom_point(
     aes(color = Elevation_cat),
     alpha = 0.2,
     size = 1.7,
     position = position_jitter(w = 0.2)
   ) +
   geom_boxplot(aes(color = Elevation_cat),
                alpha = 0.5,
                outlier.alpha = 0.0) +
   scale_color_manual(name = "Elevation",
     labels = c('Low', 'Mid', 'High'),
     values = met.brewer(
       "Cassatt1",
       n = 3,
       type = "discrete",
       direction = -1
     )
   ) +
  scale_shape_manual(values=c(15:18)) +
  theme_elevdiv_discrete +
  theme(legend.text = element_text(size = 14))+
  scale_y_continuous(expand = c(0.05, 0.05)) +
  stat_compare_means(comparisons = my_comparisons3,
                     method = "wilcox.test", 
                     label = "p.signif") +
  labs(y = "\U1D492 = 2", x = "") +
  guides(fill = guide_legend(title = "Elevation"), shape = guide_legend(title = "Species"))

#hill2_beta


# Joining plots
hill_beta <- ggarrange(hill0_beta, hill1_beta, hill2_beta,
          nrow = 1, ncol = 3,
          common.legend = TRUE,
          legend = "bottom",
          labels = c("D", "E", "F"))
# hill_beta

#### Alpha and Beta diversity ####
# Joined plots
# A joined plot of joined plots


alpha_beta_diversity <- ggarrange(hill_numbers_species, "", hill_beta,
                          nrow = 3, ncol = 1,
                          common.legend = FALSE,
                          widths = c(1, 0.2, 1),
                          heights = c(1, 0.2, 1),
                          legend = "bottom")

alpha_beta_diversity

ggsave(filename = file.path(path, "figures/figure3.png"), plot = alpha_beta_diversity, dpi=300, units=c("mm"), width=300, height=275)

# Alpha and beta diversity plot for defense talk
defense_alpha_beta <- ggarrange(hill1_diversity, hill1_species,
                          nrow = 2, ncol = 1,
                          common.legend = TRUE,
                          legend = "bottom",
                          labels = c("A", "B"))
defense_alpha_beta

ggsave(filename = file.path(path, "figures/defense_alpha_beta.svg"), plot = defense_alpha_beta, dpi=300, units=c("mm"), width=300, height=300)

```

## Figure 4

```{r, figure4}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 7
#| label: dbrda_plot
#| fig-cap: "FEF community composition association with leaf functional traits and elevation per host species. Distance-based Redundancy Analysis (dbRDA) plot of rarefied FEF community and leaf functional traits by species. A) Each cluster of points represents a rarefied FEF community sample from one host species; blue filled squares correspond to *M. laciniatus*, green circles to *M. nasutus*, and yellow triangles to *M. guttatus*. B) Purple filled shapes correspond to LOW elevation, pink chapes to MID elevation and light maroon shapes to HIGH elevation. Point shapes correspond to host species. Solid arrow lines represent significant associations (*p* < .01), while dashed lines represent non-significant associations. The length and direction of the arrows indicate the strength and direction of the association between the traits and the FEF community composition. The labels on the arrows correspond to the leaf functional traits. Ellipses represent 95% confidence intervals. The plot is based on the Bray-Curtis dissimilarity matrix."

# dbRDA using Elevation as continuous variable
#logACI + logLT + logLPS + logLMA +
load(file = "clean_data/statistics/m5_hell.rda")

# Final model
final_model <- m5_hell # Previously m4_hell was the best

B <- summary(final_model)

# Extracting scores for the plot
ordination_scores <- as.data.frame(vegan::scores(final_model)$sites)

# Extracting names for the plot
ordination_names <- rownames(ordination_scores)

# Row names to column
ordination_scores$Unique_ID <- rownames(ordination_scores)

# Subset for the plot
dbrda_df <- plant_traits_MB
  #filter(Unique_ID %in% ordination_names)

# Merge scores with trait data
merged_data <- right_join(ordination_scores, dbrda_df, by = c("Unique_ID" = "X"))

# Extracting scores for arrows
arrow_scores <- as.data.frame(vegan::scores(final_model, display = "bp"))

# Define the arrow aesthetic mapping
arrow_map <- aes(xend = (dbRDA1*2), yend = (dbRDA2*2), x = 0, y = 0, shape = NULL, color = NULL, fill = NULL)
label_map <- aes(x = 2*dbRDA1, y = 2*dbRDA2, label = row.names(arrow_scores), shape = NULL, color = NULL, fill = NULL)
arrowhead = arrow(length = unit(0.02, "npc"))

#subset A4 for labeling
arrow_scores <- arrow_scores[order(rownames(arrow_scores)), ]
A4 <- lapply(1:6, function(i) arrow_scores[i, ])

# dbRDA plot based on species
p_final_model <-
    ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
    geom_point(
        data = merged_data,
        aes(color = Species),
        size = rel(4),
        alpha = 0.05,
        stroke = 1
    ) +
    stat_ellipse(
        aes(color = Species),
        geom = "path",
        linewidth = 1.3,
        position = "identity",
        type = "t",
        linetype = 1,
        level = 0.95,
        segments = 51,
        na.rm = FALSE,
        show.legend = NA,
        inherit.aes = TRUE
    )+
    geom_segment(
        arrow_map,
        linewidth = rel(.8),
        data = arrow_scores[1:2,],
        color = "black",
        arrow = arrowhead
    ) +
    geom_vline(xintercept = 0,
               color = "grey30",
               linetype = "dashed") + # plot vertical line
    geom_hline(yintercept = 0,
               color = "grey30",
               linetype = "dashed") + # plot horizontal line
    geom_text(
        label_map,
        size = rel(4),
        data = A4[[1]],
        fontface = "bold",
        show.legend = FALSE,
        label = c("Elev."),
        nudge_x = 0.65
    ) +
    geom_text(
        label_map,
        size = rel(4),
        data = A4[[2]],
        fontface = "bold",
        show.legend = FALSE,
        label = c("logLBI"),
        nudge_y = 0.2
    ) +
    xlab(label = paste(
        "dbRDA1 (",
        round(B$concont$importance[2, 1] * 100, digits = 1),
        "%)",
        sep = ""
    )) +
    ylab(label = paste(
        "dbRDA2 (",
        round(B$concont$importance[2, 2] * 100, digits = 1),
        "%)",
        sep = ""
    )) + 
    scale_color_manual(
        labels = c("*M. laciniatus*", "*M. nasutus*", "*M. guttatus*"),
        values = met.brewer(
            "Isfahan2",
            n = 3,
            type = "discrete",
            direction = -1
        )
    ) +
    #scale_shape_manual(values = c(1:22)) +
    theme_classic(base_size = 16) +
    theme(
        legend.title = element_text(face = "bold"),
        legend.text = element_markdown(),
        plot.caption = element_markdown(),
        strip.text = element_text(face = "bold")
    )+
  labs(caption = "*F*<sub>7,4192</sub> =268.1, *p* = .001") + #Results from beta_perm3
  facet_wrap(~ Elevation_cat) +
  guides(shape = guide_legend(ncol=2))
     
# Rearranging the order of layers so arrows are above the points.
#p_final_model$layers
# p_final_model$layers <- c(p_final_model$layers, p_final_model$layers[[2]], p_final_model$layers[[5]], p_final_model$layers[[6]])
p_final_model

ggsave(filename=file.path(path, "figures/dbRDA_elevation_labels.svg"), plot = p_final_model, dpi=300, units=c("mm"), width=250, height=150)

#####################################
# dbRDA using Elevation 
#m3bdrda <- dbrda(asv_vegdist ~ logACI + logLT + logLPS + logLMA + logLBI + Elevation_cat, distance = "bray", data = ordi_traits, na.action = na.omit)

# dbRDA plot based on elevation
elev_cat_dbrda <-  ggplot(data = merged_data, aes(x = dbRDA1, y = dbRDA2)) +
  geom_point(data = merged_data, aes(color = Elevation_cat, shape = Species), size = rel(4), alpha = 0.7, stroke = 1) +
  geom_segment(arrow_map, size = rel(.8), data = arrow_scores[1:2, ], color = "black", arrow = arrowhead) +
  geom_vline(xintercept = 0, color = "grey30", linetype = "dashed") + # plot vertical line
  geom_hline(yintercept = 0, color = "grey30", linetype = "dashed") + # plot horizontal line
  geom_text(label_map, size = rel(4), data = A4[[1]], fontface = "bold", show.legend = FALSE, label = c("Elev."), nudge_x = 0.55) +
  geom_text(label_map, size = rel(4), data = A4[[2]], fontface = "bold", show.legend = FALSE, label = c("logLBI"), nudge_y = 0.2) +
  xlab(label = paste("dbRDA1 (", round(B$concont$importance[2,1]*100, digits = 1), "%)", sep="")) +
  ylab(label = paste("dbRDA2 (", round(B$concont$importance[2,2]*100, digits = 1), "%)", sep="")) + 
  scale_color_manual(name = "Elevation", values= met.brewer("Cassatt1", n = 3, type = "discrete", direction = -1)) +
  scale_shape_manual(values=c(15:18), labels = c("*M. laciniatus*","*M. nasutus*", "*M. guttatus*")) +
  stat_ellipse(aes(color = Elevation_cat),
               geom = "path",
               linewidth = 1.3,
               position = "identity",
               type = "t", linetype = 1,
               level = 0.95,
               segments = 51,
               na.rm = FALSE,
               show.legend = NA, inherit.aes = TRUE) +
  theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        legend.text = element_markdown()) +
  guides(shape = guide_legend(ncol=1))

     
# Rearranging the order of layers so arrows are above the points.
elev_cat_dbrda$layers <- c(elev_cat_dbrda$layers, elev_cat_dbrda$layers[[2]], elev_cat_dbrda$layers[[5]], elev_cat_dbrda$layers[[6]])
#elev_cat_dbrda

# Joining plots
double_dbrda <- ggarrange("", p_final_model,"", elev_cat_dbrda, ncol = 1, 
                          nrow = 4, 
                          heights = c(0.1, 1, 0.1, 1),
                          widths = c(1, 0.1, 1),
          labels = c("A", "","B"),
          common.legend = F, legend = "right")

double_dbrda
#Save the plot
ggsave(file.path(path, "figures/figure4.png"), plot = double_dbrda, dpi=300, units=c("mm"), width=200, height=250)
```

## Figure 5

```{r, figure5}
#| echo: false
#| eval: true
#| tidy: true
| fig-width: 6
| fig-height: 7
#| label: mantel_plot
#| fig-cap: "Dissimilarity of FEF communities associates with *Mimulus* as a function of geographic distance per site. Data represent pairwise Bray-Curtis dissimilarity among sites. A) Fefe community dissimilarity in considering all host species. B) FEf community dissimilarity by host species. Blue filled points correspond to *M. laciniatus*, green filled to *M. nasutus*, and yellow to *M. guttatus*."

# Prepare the data for correlation plot
# Longer format
asv_vegdist <- as.matrix(vegdist(t(asv_matrix), method = "bray"))

asv_long <-  asv_vegdist |>
  as_tibble(rownames = "A") |>
  pivot_longer(-A, names_to = "B", values_to = "bray_diss")

geo_long <- geo_distm |>
  as_tibble(rownames = "A") |>
  pivot_longer(-A, names_to = "B", values_to = "geo_dist")

# Merge the two dataframes
asv_geo_matrix_long <- inner_join(asv_long, geo_long, by = c("A", "B")) |>
  inner_join(plant_traits |>
               dplyr::select(Unique_ID, Site, Species, Elevation_cat), by = c("A" ="Unique_ID"))

# Mantel test
# All data points
set.seed(859)
abund_geo  <- mantel(asv_vegdist, geo_distm,
                     method = "spearman", 
                     parallel = 8,
                     permutations = 999, 
                     na.rm = TRUE)
#abund_geo

# Mantel test by species
# M. laciniatus

# Samples with species to subset/filter matrices downstream
# M. laciniatus
lac_names_rfy <- plant_traits |>
  slice(1:157) |> # Only selecting observations with ASV data 
  filter(Unique_ID %in% final_names_methodB,
    Species == "M. laciniatus") |>
  pull(Unique_ID) 

# Subset the data
lac_mantel  <- mantel(asv_long |> # Subset the data
                       filter(A %in% lac_names_rfy, B %in% lac_names_rfy) |>
                       pivot_wider(names_from = B, values_from = bray_diss) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(),
                     geo_long |> # Subset the data
                       filter(A %in% lac_names_rfy, B %in% lac_names_rfy) |>
                       pivot_wider(names_from = B, values_from = geo_dist) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(),
                      method = "spearman", permutations = 999, na.rm = TRUE)
#lac_mantel

# M. nasutus
nas_names_rfy <- plant_traits |> 
  slice(1:157) |> # Only selecting observations with ASV data 
  filter(Unique_ID %in% final_names_methodB,
         Species == "M. nasutus") |>
  pull(Unique_ID)
nas_mantel  <- mantel(asv_long |> # Subset the data
                       filter(A %in% nas_names_rfy, B %in% nas_names_rfy) |>
                       pivot_wider(names_from = B, values_from = bray_diss) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(), 
                      geo_long |> # Subset the data
                       filter(A %in% nas_names_rfy, B %in% nas_names_rfy) |>
                       pivot_wider(names_from = B, values_from = geo_dist) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(), 
                     method = "spearman", permutations = 999, na.rm = TRUE)
#nas_mantel

# M. guttatus
gut_names_rfy <- plant_traits |> 
  slice(1:157) |> # Only selecting observations with ASV data 
  filter(Unique_ID %in% final_names_methodB,
         Species == "M. guttatus") |>
  pull(Unique_ID)
# Subset the data
gut_mantel  <- mantel(asv_long |> # Subset the data
                       filter(A %in% gut_names_rfy, B %in% gut_names_rfy) |>
                       pivot_wider(names_from = B, values_from = bray_diss) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(),
                     geo_long |> # Subset the data
                       filter(A %in% gut_names_rfy, B %in% gut_names_rfy) |>
                       pivot_wider(names_from = B, values_from = geo_dist) |>
                       column_to_rownames(var = "A") |>
                       as.matrix(),
                     method = "spearman", permutations = 999, na.rm = TRUE)
#gut_mantel

# Visualize the correlation
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("M. laciniatus", "M. nasutus", "M. guttatus")

# Correlation ggplot
mantel_test <- ggplot(asv_geo_matrix_long, aes(y = bray_diss, x = geo_dist)) +
  geom_point(aes(color = Species), alpha = 0.5, size = 3) +
  geom_smooth(method = "lm", se = TRUE, color = "black") +
  
  # stat_cor(
  #   method = "spearman",
  #   alternative = "greater",
  #   cor.coef.name = "rho",
  #   label.sep = ", ",
  #   label.x.npc = "left",
  #   label.y.npc = "bottom",
  #   output.type = "expression",
  #   digits = 3,
  #   r.digits = 3,
  #   p.digits = 3,
  #   geom = "text"
  # )+

  scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) + 
  labs(y = "Bray Curtis dissimilarity", x = "Geographic distance (m)", col = "") + 
  scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) +
  theme_lfspp_continuous

# Adding the mantel test results

italic_r <- expression(italic("r ="))
italic_p <- expression(italic("p ="))
statistic <- round(abund_geo$statistic, digits = 2)
signif <- round(abund_geo$signif, digits = 3)


mantel_test <- mantel_test + ggplot2::annotate(
  "text",
  x = 110000,
  y = 0,
  label = paste(italic_r, statistic, italic_p, signif, sep = "~"),
  size = 5 ,
  parse = TRUE
)
mantel_test    

# By species
mantel_species <- ggplot(asv_geo_matrix_long, aes(y = bray_diss, x = geo_dist)) +
   geom_jitter(aes(color = Species), alpha = 0.5, size = 3) +
   geom_smooth(method = "lm", se = TRUE, color = "black") +
   # stat_regline_equation(label.y = 0.25, label.x = "right",
   #                        #aes(label = ..adj.rr.label.., ), size = rel(4), color = "black") 
   # stat_fit_glance(method = 'lm',
   #                 method.args = list(formula = y ~ x),
   #                 geom = 'text',
   #                 aes(label = paste("p = ",
   #                                   signif(..p.value.., digits = 4),
   #                                   sep = "")),
   #                 color = "black",
   #                 label.x = 'right',
   #                 label.y = 0.23, size = 4) +
   scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  labs(y = "Bray Curtis dissimilarity", x = "Geographic distance (m)", col = "") +
  scale_x_continuous(labels = function(x) format(x, scientific = FALSE)) +
  theme_lfspp_continuous +
  theme(strip.text = element_text(face = "bold.italic"))+
  facet_wrap(~ Species, labeller = labeller(Species = labels_list))
mantel_species

# Adding the mantel test results
library("egg")
italic_r <- expression(italic("r ="))
italic_p <- expression(italic("p ="))
statistic_lac  <- round(lac_mantel$statistic, digits = 2)
signif_lac <- round(lac_mantel$signif, digits = 3)
statistic_nas  <- round(nas_mantel$statistic, digits = 2)
signif_nas <- round(nas_mantel$signif, digits = 3)
statistic_gut  <- round(gut_mantel$statistic, digits = 3)
signif_gut <- round(gut_mantel$signif, digits = 3)

my_tags <-
  c(
    paste0("r = ", statistic_lac, ", p = ", signif_lac, sep = " "),
    paste0("r = ", statistic_nas, ", p = ", signif_nas, sep = " "),
    paste0("r = ", statistic_gut, ", p = ", signif_gut, sep = " ")
  )

mantel_species <- tag_facet(
  mantel_species,
  x = -Inf,
  y = -Inf,
  vjust = -1,
  hjust = -0.95,
  open = "",
  close = "",
  fontface = 3,
  size = 4,
  tag_pool = my_tags
)

detach("package:egg", unload=TRUE)

# Joining plots
mantel <- ggpubr::ggarrange(mantel_test, "", mantel_species, 
                    ncol = 1, nrow = 3, 
                    widths = c(1, 0.1, 1),
                    heights = c(1, 0.1, 1),
                    labels = c("A", "B"),
                    common.legend = T, legend = "bottom")

mantel
ggsave(file.path(path, "figures/figure5.png") , plot = mantel, dpi=300, units=c("mm"), width=300, height=250)
abund_geo$statistic
```


## Figure 6

```{r, figure6}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: pca
#| fig-cap: "The Principal Component Analysis (PCA) shows how leaf functional traits are correlated. The PCA analyses shows correlations between ACI, LT, LPS, and LMA as loadings track along PC1 towards positive values. We observe distinct groupings by species along PC2 such that *M. laciniatus*, the most lobed species, is distinct from *M.guttatus* and *M. nasutus*. The latter two have greater overlap along PC1 and PC2."

# PCA using covariates to explain species richness/abundance ####
data.pca <- leaf_traits_noB |>
  na.omit() |>
  select(c(20:24)) #Selecting only the log-transformed leaf trait columns. We use the log transformed data due to our findings of non-normality in the data. See this post for a hot take: https://stats.stackexchange.com/questions/164381/why-log-transforming-the-data-before-performing-principal-component-analysis

leaf_traits.pca <- na.omit(leaf_traits_noB) 


###Run this to create pca with prcomp function
pca <- prcomp(data.pca, scale = TRUE)
pca$rotation=-pca$rotation
pca$x=-pca$x

#Checking the PCA
#plot(pca,type = "lines")
#biplot(pca) # Base type PCA

# PCA using autoplot() and prcomp()and modifying with ggplot syntax ####
pca_auto <- autoplot((pca), data = data.frame(leaf_traits.pca), # For some reason this functions require data to be data= data.frame()
         alpha = 0, #Setting alpha to zero render the automatic circle point null.Manipulate shapes with geom_point(). 
         loadings = TRUE,
         loadings.colour = "black",
         loadings.label = TRUE, 
         loadings.label.colour="black",
         loadings.label.size = 4, size = 7, 
         loadings.label.vjust = 0, 
         loadings.label.hjust = -0.15) + 
  geom_point(aes(fill = Species, color = Species), alpha = 0.5, size = 3) +
  geom_hline(yintercept = 0, colour = "gray45") +
  geom_vline(xintercept = 0, colour = "gray45") +
  scale_fill_manual(labels=c("*M. laciniatus*", "*M. nasutus*", "*M. guttatus*"), 
                    values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  scale_color_manual(labels = c("*M. laciniatus*", "*M. nasutus*", "*M. guttatus*"),
                     values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  stat_ellipse(aes(color = Species), 
               geom = "path", 
               linewidth = 1.3, 
               position = "identity", 
               type = "t", 
               linetype = 1, 
               level = 0.95, 
               segments = 51, na.rm = TRUE, show.legend = NA, inherit.aes = TRUE) +
  #scale_x_continuous(expand = c(0.0, -0.09)) +
  theme_classic(base_size = 16) +
  theme(legend.text = element_markdown(),
        legend.position = "bottom",
        legend.title = element_text(face = "bold")) 
  # labs(caption = expression("ACI = anthocyanins, LPS = leaf punch strength, LMA = leaf mass per area, LT = leaf thickness. LBI = Leaf lobe index. All leaf replicates per species ("~ italic("n") ~ "= 501)."))


pca_auto$layers <- c(pca_auto$layers, pca_auto$layers[[2]], pca_auto$layers[[3]]) # This adds/copies layers 2-3 and overlays them. It makes the arrows be on top of the points. There must be a better ways of doing this.

pca_auto

ggsave(filename = file.path(path, "figures/figure6.png"), plot = pca_auto, dpi=300, units=c("mm"), width=150, height=150)
```




# Supplementary Material

## Figure S1

```{r}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: trait_correlation
#| fig-cap: "Correlation matrix of log-transformed leaf functional traits by host species. The plot is based on the Spearman's rho. Significance levels are represented by ns (not significant) and asterisks [p < 0.05 (*), p < 0.01 (**), p < 0.001 (***), and p < 0.0001 (****)]."

t4 <- trans_env$new(dataset = micro_psclean, env_cols = c(5,14:18))

t4gg <- t4$cal_autocor(group = "Species", upper = list(continuous = GGally::wrap("cor", method= "spearman"))) + 
  theme(
    legend.title = element_text(face = "bold"),
         strip.text = element_text(face = "bold", size = 10),
         panel.border = element_rect(linetype = "blank", fill = NA)) +
  scale_fill_manual(values = met.brewer("Isfahan2", n = 3, type = "discrete", direction = c(-1))) +
  scale_color_manual(values = met.brewer("Isfahan2", n = 3, type = "discrete", direction = c(-1)))

t4gg
ggplot2::ggsave(file.path(path, "figures/supp_fig1.png") , plot = t4gg, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S2

```{r, supp_fig8}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-width: 6
#| fig-height: 6
#| label: heatmap
#| fig-cap: "Heatmap of the top 10 most abundant genera in the dataset. The heatmap shows the relative abundance of the top 10 most abundant genera in the dataset. The heatmap is faceted by host species and elevation category."

# Plot with micro_psclean
t2 <-
  trans_abund$new(dataset = micro_psclean,
                  taxrank = "Genus",
                  ntaxa = 10)
t2gg <-
  t2$plot_heatmap(
    facet = c("Species", "Elevation_cat"),
    xtext_keep = FALSE,
    withmargin = FALSE
  ) +
  labs(title = "Un-rarefied reads") +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold.italic", size = 12),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank()
  )

#t2gg



r2 <-
  trans_abund$new(dataset = micro_rarefied_ps,
                  taxrank = "Genus",
                  ntaxa = 10)
r2gg <-
  r2$plot_heatmap(
    facet = c("Species", "Elevation_cat"),
    xtext_keep = FALSE,
    withmargin = FALSE
  ) +
  labs(title = "Rarefied reads") +
  theme(
    legend.title = element_text(face = "bold"),
    strip.text = element_text(face = "bold.italic", size = 12),
    panel.border = element_rect(linetype = "blank", fill = NA),
    axis.text.x = element_blank()
  )

#r2gg
ggsave(filename = file.path(path, "figures/supp_fig2b.png"), plot = r2gg, dpi=300, units=c("mm"), width=300, height=200)

# Joined heatplots
heatplots <- ggarrange(t2gg, r2gg, ncol = 1, nrow = 2, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))
heatplots

# Save the plot
ggplot2::ggsave(filename = file.path(path, "figures/supp_fig2.png"), plot = heatplots, dpi=300, units=c("mm"), width=300, height=250)
```


## Figure S3
```{r, supp_fig3}
#| echo: false
#| eval: true
#| tidy: true
#| message: false
#| fig-height: 6
#| fig-width: 6
#| label: venn_diagrams
#| fig-cap: "Venn diagrams of present and absense of ASVs among species and elevation categories un-rarified data and rarified data. A-B) Represent the overlap of ASVs habitat types and C-D) in gentoypes. Number of ASVs are represented the count and in parentheses as a ratio shared between genotype and habitat type."

# un-rarified data
# Per Species
dataset1 <- micro_psclean$merge_samples(use_group = "Species")
# create trans_venn object
v1 <-
  trans_venn$new(dataset1, ratio = "numratio") # Percentage represent ratio of shared ASVs
v1gg <-
  v1$plot_venn() + #https://r-charts.com/color-palettes/#discrete
  ggtitle("Un-rarified data") +
  theme(plot.title = element_text(
    face = "bold",
    size = 16,
    hjust = 0.5,
    vjust = 0.5
  ))


# Per Elevations
dataset2 <- micro_psclean$merge_samples(use_group = "Elevation_cat")
v2 <- trans_venn$new(dataset2, ratio = "numratio") 
#v2$plot_venn()

# rarified data
#micro_rarefied_ps <- phyloseq2meco(rarefied_phyloseq) # First convert phyloseq to meco
# Per Species
dataset3 <- micro_rarefied_ps$merge_samples(use_group = "Species") 
# create trans_venn object
v3 <- trans_venn$new(dataset3, ratio = "numratio")
v3gg <- v3$plot_venn() +
  #ggtitle("Rarified data") +
  theme(plot.title = element_text(
    face = "bold",
    size = 16,
    hjust = 0.5,
    vjust = 0.5
  ))

# Per Elevations
dataset4 <- micro_rarefied_ps$merge_samples(use_group = "Elevation_cat")
v4 <- trans_venn$new(dataset4, ratio = "numratio")
#v4$plot_venn()

                                        
# joined plots
venn_plots <-
  ggarrange(
    v1gg,
    v3gg,
    "", # Fake plot to create space
    "",
    v2$plot_venn(),
    v4$plot_venn(),
    ncol = 2,
    nrow = 3,
    common.legend = TRUE,
    heights = c(1, 0.1, 1),
    legend = "bottom",
    labels = c("A", "B","", "", "C", "D")
  )

venn_plots

rrfy_venn <-
  ggarrange(
    v3gg,
    v4$plot_venn(),
    ncol = 2,
    nrow = 1,
    common.legend = TRUE,
    legend = "bottom",
    labels = c("Species", "Elevation")
  ) + ggtitle("Rarified data")

ggsave(filename = file.path(path, "figures/supp_fig3b.png"), plot = rrfy_venn, dpi=300, units=c("mm"), width=250, height=150)

# Save
ggsave(filename = file.path(path, "figures/supp_fig3.png"), plot = venn_plots, dpi=300, units=c("mm"), width=300, height=300)

```
## Figure S4

```{r, supp_fig4}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lma_elev_scatter
#| fig-cap: "Comparison of log-transformed leaf mass per area (LMA) by species and elevation category. A) Compares logLMA means by species and elevation category: LOW (<1220 m), MID (1221 - 1828 m), HIGH (> 1829 m). The black line across violins represents the mean value. B) Change in logLMA per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."


########## Labels ###########
#Legend title label
legend_title <- "Species"
# Species labels
labels_list <- c("M. laciniatus", "M. nasutus", "M. guttatus")
names(labels_list) <- c("L", "N", "G")
#############################

#ggpubr package used for comparisons tests
lma_compare_means <- compare_means(logLMA ~ Species,
         data = leaf_traits_noB,
         group.by = "Elevation_cat",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#lma_compare_means
#Report with `compare_means` because it is easier to plot with `ggpubr` package.

#Error bars for plots 
errbar_lims <- group_by(leaf_traits_noB, Site) |> 
              summarize(mean = mean(logLMA), se = sd(logLMA)/sqrt(n()), 
                        upper = mean+(2*se), lower = mean-(2*se))
#Comparisons
my_comparisons <- list(c("M. nasutus", "M. laciniatus"), c("M. nasutus", "M. guttatus"), c("M. laciniatus", "M. guttatus"))

#By Site discrete comparison
lma <- ggplot(leaf_traits_noB, aes(y = logLMA, x = Species)) +
 geom_point(
    aes(color = Species),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Species), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels =c('M. laciniatus', 'M. nasutus', 'M. guttatus'),
                    values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  #scale_color_manual(aes(color = "black")) +
  theme_lfspp_discrete +
  labs(y = "log10[Leaf Mass per Area (LMA) (mg/mm)]", x = "") +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     #label.y = c(0.4, 0.6, 1),
                     label = "p.signif") +
  facet_wrap(~Elevation_cat)

#lma
#ggsave(filename = file.path(path, "figures/lma_violin.png"), plot = lma, dpi=300, units=c("mm"), width=250, height=150)

# By Elevation continuous comparison
# Linear model summary
# summary(lm(logLMA ~ Elevation_m, data = leaf_traits_noB |>
#              filter(!logLMA == "-Inf"), na.action = na.omit)) # Remove -Inf values
elev_lma_p <- format.p(cor.test(leaf_traits_noB$logLMA, leaf_traits_noB$Elevation_m, na.action = na.omit)$p.value) # This is just to make the p-value nicer. 

# logLMA by Elevation
lma_cont <- ggplot(leaf_traits_noB |> # Removing infinite values
                     filter(!logLMA == "-Inf"), aes(y = logLMA, x = Elevation_m)) +
  geom_jitter(aes(color = Species), alpha = 0.6,
             size = 2.5) +
  geom_smooth(aes(color = Species), method = lm, se = FALSE, na.rm = F) +
  geom_smooth(method = lm, se = TRUE, level = 0.95, na.rm = F, color = "black") +
  stat_poly_eq(
    formula = y ~ x,
    aes(
      color = Species,
      label = paste(#..eq.label..,
        ..adj.rr.label..,
        #"~italic(p) ==",
        ..p.value.label..,
        #signif(..p.value.., digits = 4),
        sep = "*`,`~~")
    ),
    parse = TRUE,
    label.x.npc = "left",
    vstep = 0.08
  )+
  scale_color_manual(labels =c('M. laciniatus', 'M. nasutus', 'M. guttatus'),
                    values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_lfspp_continuous +
  labs(y = "log10[Leaf Mass per Area (LMA)]", x = "Elevation (m.a.s.l.)") 

#lma_cont
#ggsave(filename = file.path(path, "figures/lma_elev.png"), plot = lma_cont, dpi=300, units=c("mm"), width=300, height=150)

# Joining plots
lma_elevation <- ggarrange(lma_cont, lma, ncol = 1, nrow = 2, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))

lma_elevation

ggsave(filename = file.path(path, "figures/supp_fig4.png"), plot = lma_elevation, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S5

```{r, supp_fig5}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 5
#| label: aci_elev_scatter
#| fig-cap: "Change in log-transformed anthocyanin content index (ACI) by species and elevation category. A) Compares logACI means by species and elevation category: LOW (<1220 m), MID (1221 - 1828 m), HIGH (> 1829 m). The black line across violins represents the mean value. B) Change in logLPS per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#ggpubr package used for comparisons tests
aci_compare_means <- compare_means(logACI ~ Species,
         data = leaf_traits_noB,
         group.by = "Elevation_cat",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#aci_compare_means
#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits_noB, Species) |> 
              summarize(mean = mean(logACI), se = sd(logACI)/sqrt(n()), 
                        upper = mean + (2*se), lower = mean - (2*se))

#Comparisons
my_comparisons <- list(c("M. nasutus", "M. laciniatus"), c("M. nasutus", "M. guttatus"), c("M. laciniatus", "M. guttatus"))


aci <- ggplot(leaf_traits_noB, aes(y = logACI, x = Species)) +
   geom_point(
    aes(color = Species),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Species), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values= met.brewer("Isfahan2", n = 4, type = "discrete", direction = -1)) +
  theme_lfspp_discrete +
  theme(axis.text.y = element_text(size = 10)) +
  labs(y = paste("log[Anthocyanin Content Index (ACI)]"), x = "") +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     #label.y = c(0.4, 0.6, 1),
                     label = "p.signif") +
  facet_wrap(~Elevation_cat)

#aci
#ggsave(filename = file.path(path, "figures/aci_violin.png"), plot = aci, dpi=300, units=c("mm"), width=300, height=150)

# By Elevation continuous comparison
# Linear model summary
#summary(lm(logACI~ Elevation_m, data = leaf_traits_noB, na.action = na.omit))
elev_aci_p <- format.p(cor.test(leaf_traits_noB$logACI, leaf_traits_noB$Elevation_m, na.action = na.omit)$p.value) # This is just to make the p-value nicer. 

# logACI by Elevation
aci_cont <- ggplot(leaf_traits_noB, aes(y = logACI, x = Elevation_m)) +
  geom_jitter(aes(color = Species), alpha = 0.6,
             size = 2.5)  +
  geom_smooth(aes(color = Species), method = lm, se = FALSE, na.rm = F) +
  geom_smooth(method = lm, se = TRUE, level = 0.95, na.rm = F, color = "black") +
  stat_poly_eq(formula = y ~ x, 
               aes(color = Species,
                   label = paste(#..eq.label.., 
                                 ..adj.rr.label.., 
                                 #"~italic(p) ==",
                                 ..p.value.label.., 
                                 #signif(..p.value.., digits = 4),
                                 sep = "*`,`~~")), 
               parse = TRUE,
               label.x.npc = "left",
               vstep = 0.08) +
  scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_lfspp_continuous +
  theme(#plot.caption = element_text(size = 10),
        axis.text.y = element_text(size = 10)) +
  labs(size = 10,
    y = paste("log[Anthocyanin Content Index (ACI)]"),
    x = "Elevation (m.a.s.l.)"
    # caption = (expression(
    #   paste("ACI = % ", italic("A") [lambda], " at 931 nm / % ", italic("A") [lambda], " at 530 nm")
    # ))
  )+
  scale_y_continuous(expand = c(0.07, 0.07)) 

#aci_cont
#ggsave(filename = file.path(path, "figures/aci_cont.png"), plot = aci_cont, dpi=300, units=c("mm"), width=300, height=150)

# Joining plots
aci_elevation <- ggarrange("", aci_cont, "", aci, 
                           ncol = 1, nrow = 4, 
                           heights = c(0.1, 1.1, 0.1, 1.1),
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A","", "B")
                           )

aci_elevation
ggsave(filename = file.path(path, "figures/supp_fig5.png"), plot = aci_elevation, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S6

```{r, supp_fig6}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lbi_elev_scatter
#| fig-cap: "Change in log-transformed leaf lobe index (LBI) by species and elevation category. A) Compares logLBI means by species and elevation category: LOW (<1220 m), MID (1221 - 1828 m), HIGH (> 1829 m). The black line across violins represents the mean value. B) Change in logLPS per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#ggpubr package used for comparisons tests
lbi_compare_means <- compare_means(logLBI ~ Species,
         data = leaf_traits_noB,
         group.by = "Elevation_cat",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#lbi_compare_means


#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits_noB, Species) |> 
              summarize(mean = mean(logLBI), se = sd(logLBI)/sqrt(n()), 
                        upper = mean + (2*se), lower = mean - (2*se))

#Comparisons
my_comparisons <- list(c("M. nasutus", "M. laciniatus"), c("M. nasutus", "M. guttatus"), c("M. laciniatus", "M. guttatus"))

lbi <- ggplot(leaf_traits_noB, aes(y = logLBI, x = Species)) +
 geom_point(
    aes(color = Species),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Species), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(labels =c('M. laciniatus', 'M. nasutus', 'M. guttatus'),
                    values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_lfspp_discrete +
  labs(y = "log[Leaf Lobe Index (LBI)", x = "") +
  #scale_x_discrete(labels = c('M. laciniatus', 'M. nasutus', 'M. guttatus')) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test", 
                     label = "p.signif") +
   facet_wrap(~Elevation_cat)

#lbi
#ggsave(filename = file.path(path, "figures/lbi_violin.png"), plot = lbi, dpi=300, units=c("mm"), width=300, height=150)

# By Elevation continuous comparison
# Linear model summary
#summary(lm(logLBI~ Elevation_m, data = leaf_traits_noB, na.action = na.omit))
elev_lbi_p <- format.p(cor.test(leaf_traits_noB$logLBI, leaf_traits_noB$Elevation_m, na.action = na.omit)$p.value) # This is just to make the p-value nicer. 

# logLBI by Elevation
lbi_cont <- ggplot(leaf_traits_noB, aes(y = logLBI, x = Elevation_m)) +
  geom_jitter(aes(color = Species), alpha = 0.6,
             size = 2.5)  +
  geom_smooth(aes(color = Species), method = lm, se = FALSE, na.rm = F) +
  geom_smooth(method = lm, se = TRUE, level = 0.95, na.rm = F, color = "black") +
  stat_poly_eq(formula = y ~ x, 
               aes(color = Species,
                   label = paste(#..eq.label.., 
                                 ..adj.rr.label.., 
                                 #"~italic(p) ==",
                                 ..p.value.label.., 
                                 #signif(..p.value.., digits = 4),
                                 sep = "*`,`~~")), 
               rr.digits = 2,
               p.digits = 3 ,
               parse = TRUE,
               label.x.npc = "left",
               vstep = 0.08) +
  scale_color_manual(labels =c('*M. laciniatus*', '*M. nasutus*', '*M. guttatus*'),
                    values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_classic(base_size = 16) +
  theme(legend.title = element_text(face = "bold"),
        panel.border = element_rect(linetype = "blank", fill = NA),
        legend.text = element_markdown(size = 14), #Make legend text italic
        axis.text.x = element_text(size = 14),
        legend.position = "bottom") +
  labs(y = "log[Leaf Lobe Index (LBI)]", x = "Elevation (m.a.s.l.)") +
  scale_y_continuous(expand = c(0.07, 0.07)) 

#lbi_cont
#ggsave(filename = file.path(path, "figures/lbi_elev.png"), plot = lbi_cont, dpi=300, units=c("mm"), width=300, height=150)

# Joining plots
lbi_elevation <- ggarrange(lbi_cont, lbi, ncol = 1, nrow = 2, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))

lbi_elevation

ggsave(filename = file.path(path, "figures/supp_fig6.png"), plot = lbi_elevation, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S7

```{r, supp_fig7}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lps_elev_scatter
#| fig-cap: "Change in log-transformed leaf-punch strength (LPS), a measure of leaf toughness, by species and elevation category. A) Compares logLPS means by species and elevation category: LOW (<1220 m), MID (1221 - 1828 m), HIGH (> 1829 m). The black line across violins represents the mean value. B) Change in logLPS per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#ggpubr package used for comparisons tests
lps_compare_means <- compare_means(logLPS ~ Species,
         data = leaf_traits_noB,
         group.by = "Elevation_cat",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#lps_compare_means

#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits_noB, Species) |> 
              summarize(mean = mean(logLPS), se = sd(logLPS)/sqrt(n()), 
                        upper = mean + (2*se), lower = mean - (2*se))


lps <- ggplot(leaf_traits_noB, aes(y = logLPS, x = Species)) +
 geom_point(
    aes(color = Species),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Species), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer(
    "Isfahan2",
    n = 4,
    type = "discrete",
    direction = c(-1)
  )) +
  theme_lfspp_discrete +
  labs(y = expression(paste("Leaf punch strength (LPS)(N mm", "^-1)")), x = "") +
  #scale_x_discrete(labels = c('M. laciniatus', 'M. nasutus', 'M. guttatus')) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     #label.y = c(0.4, 0.6, 1),
                     label = "p.signif") +
  facet_wrap( ~ Elevation_cat)
  
#lps
#ggsave(filename = file.path(path, "figures/lps_violin.png"), plot = lps, dpi=300, units=c("mm"), width=300, height=150)

# By Elevation continuous comparison
# Linear model summary
#summary(lm(logLPS ~ Elevation_m, data = leaf_traits_noB, na.action = na.omit))
elev_lps_p <- format.p(cor.test(leaf_traits_noB$logLPS, leaf_traits_noB$Elevation_m, na.action = na.omit)$p.value) # This is just to make the p-value nicer. 

# logLPS by Elevation
lps_cont <-
  ggplot(leaf_traits_noB, aes(y = logLPS, x = Elevation_m)) +
  geom_jitter(aes(color = Species), alpha = 0.6,
              size = 2.5)  +
  geom_smooth(aes(color = Species),
              method = lm,
              se = FALSE,
              na.rm = F) +
  geom_smooth(
    method = lm,
    se = TRUE,
    level = 0.95,
    na.rm = F,
    color = "black"
  )+
  stat_poly_eq(
    formula = y ~ x,
    aes(
      color = Species,
      label = paste(#..eq.label..,
        ..adj.rr.label..,
        #"~italic(p) ==",
        ..p.value.label..,
        #signif(..p.value.., digits = 4),
        sep = "*`,`~~")
    ),
    rr.digits = 2,
    p.digits = 3 ,
    parse = TRUE,
    label.x.npc = "left",
    vstep = 0.08
  ) +
  scale_color_manual(values = met.brewer(
    "Isfahan2",
    n = 4,
    type = "discrete",
    direction = c(-1)
  )) +
  theme_lfspp_continuous +
  labs(y = expression(paste("Leaf punch strength (LPS) (N mm", "^-1)")), x = "Elevation (m.a.s.l.)") +
  scale_y_continuous(expand = c(0.07, 0.07)) 

lps_cont
#ggsave(filename = file.path(path, "figures/lps_elev.png"), plot = lps_cont, dpi=300, units=c("mm"), width=300, height=150)

# Joining plots
lps_elevation <- ggarrange("", lps_cont, "", lps, ncol = 1, nrow = 4, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c( "A","", "B"),
                           heights = c(0.1, 1, 0.1, 1))

lps_elevation

ggsave(filename = file.path(path, "figures/supp_fig7.png"), plot = lps_elevation, dpi=300, units=c("mm"), width=300, height=300)
```

## Figure S8

```{r, supp_fig8}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| label: lt_elev_scatter
#| fig-cap: "Change in log-transformed leaf thickness (LT) (𝜇m) by species and elevation category. A) Compares logLT means by species and elevation category: LOW (<1220 m), MID (1221 - 1828 m), HIGH (> 1829 m). The black line across violins represents the mean value. B) Change in logLT per species as elevation increases. The black trend line represents the fitted model for all data points, see main text for R squared and *p* values. Significance levels are represented by *ns* (not significant) and asterisks [*p* < 0.05 (\\*), *p* < 0.01 (\\**), *p* < 0.001 (\\***), and *p* < 0.0001 (\\****)]."

#ggpubr package used for comparisons tests
lt_compare_means <- compare_means(logLT ~ Species,
         data = leaf_traits_noB,
         group.by = "Elevation_cat",
         method = "wilcox.test",
         p.adjust.method = "BH",
  paired = FALSE,
  alternative = "two.sided", 
  mu = 0, 
  var.equal = FALSE,
  conf.level = 0.95)

#lt_compare_means
#Roughly the same outcome as pairwise_t_test.

#Report with `compare_means` because it is easier to plot with `ggpubr` package.
errbar_lims <- group_by(leaf_traits_noB, Species) |> 
              summarize(mean = mean(logLT), se = sd(logLT)/sqrt(n()), 
                        upper = mean + (2*se), lower = mean - (2*se))

#Comparisons
my_comparisons <- list(c("M. nasutus", "M. laciniatus"), c("M. nasutus", "M. guttatus"), c("M. laciniatus", "M. guttatus"))

lt <- ggplot(leaf_traits_noB, aes(y= logLT, x = Species)) +
 geom_point(
    aes(color = Species),
    alpha = 0.2,
    size = 1.7,
    position = position_jitter(w = 0.2)
  ) +
  geom_boxplot(aes(color = Species), alpha = 0.5, outlier.alpha = 0.0) +
  scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_lfspp_discrete +
  labs(y = expression(paste("log[Leaf thickness (LT) (",mu,"m)]")), x = "") +
  #scale_x_discrete(labels = c('M. laciniatus', 'M. nasutus', 'M. guttatus')) +
  stat_compare_means(comparisons = my_comparisons,
                     method = "wilcox.test",
                     #label.y = c(0.4, 0.6, 1),
                     label = "p.signif", hide.ns = TRUE) +
   facet_wrap(~Elevation_cat)

lt
#ggsave(filename = file.path(path, "figures/lt_violin.png"), plot = lt, dpi=300, units=c("mm"), width=300, height=150)

# By Elevation continuous comparison
# Linear model summary
#summary(lm(logLT ~ Elevation_m, data = leaf_traits_noB, na.action = na.omit))
#elev_lt_p <- format.p(cor.test(leaf_traits_noB$logLT, leaf_traits_noB$Elevation_m, na.action = na.omit)$p.value) # This is just to make the p-value nicer. 

# logLT by Elevation
lt_cont <- ggplot(leaf_traits_noB, aes(y = logLT, x = Elevation_m)) +
  geom_jitter(aes(color = Species), alpha = 0.6,
             size = 2.5)  +
  geom_smooth(aes(color = Species), method = lm, se = FALSE, na.rm = F) +
  geom_smooth(method = lm, se = TRUE, level = 0.95, na.rm = F, color = "black") +
  stat_poly_eq(formula = y ~ x, 
               aes(color = Species,
                   label = paste(#..eq.label.., 
                                 ..adj.rr.label.., 
                                 #"~italic(p) ==",
                                 ..p.value.label.., 
                                 #signif(..p.value.., digits = 4),
                                 sep = "*`,`~~")), 
               rr.digits = 2,
               p.digits = 3 ,
               
               parse = TRUE,
               label.x.npc = "left",
               vstep = 0.08) +
  scale_color_manual(values = met.brewer("Isfahan2", n = 4, type = "discrete", direction = c(-1))) +
  theme_lfspp_continuous +
  labs(y = expression(paste("log[Leaf thickness (LT) (",mu,"m)]")), x = "Elevation (m.a.s.l.)") +
  scale_y_continuous(expand = c(0.07, 0.07)) 

#lt_cont
#ggsave(filename = file.path(path, "figures/lps_elev.png"), plot = lps_cont, dpi=300, units=c("mm"), width=300, height=150)

# Joining plots
lt_elevation <- ggarrange(lt_cont, lt, ncol = 1, nrow = 2, 
                           common.legend = TRUE, 
                           legend = "bottom",
                           labels = c("A", "B"),
                           heights = c(1, 1))
lt_elevation
ggsave(filename = file.path(path, "figures/supp_fig8.png"), plot = lt_elevation, dpi=300, units=c("mm"), width=300, height=300)
```


## Figure S9
```{r, supp_fig9}
#| echo: false
#| eval: true
#| tidy: true
#| fig-width: 6
#| fig-height: 6
#| fig-caption: "Maps of Mimulus spp. sampling sites in the Sierra Nevada, California, USA. A) Map of the Sierra Nevada region showing the location of the three species sampled. The color gradient represents the elevation gradient from low (yellow) to high (purple)."

library("ggmap")
library("ggspatial")
# Map of sampling sites

#register_google(key ='SECRET_KEY', write = TRUE)

map_latlong <- read_excel("field_data/Mimulus_CH2_Field_Survey.xlsx", sheet = "clean_site_lat_long")

map_latlong <- plant_traits |>
  select(Site, Species, Longitude, Latitude, Elevation_m) |>
  filter(!Site == "FVWB" & !Site == "LYFB" & !Site == "TRTB")

mappops <- get_map(
  location = c(
    lon =
      mean(map_latlong$Longitude),
    lat =
      mean(map_latlong$Latitude)
  ),
  zoom = 9,
  maptype = "terrain",
  scale = 4
)
map <- ggmap(mappops, extent = "device", darken = 0) +
  geom_point(
    data = map_latlong,
    aes(x
        = Longitude, y = Latitude, fill =
          Site),
    size = 2,
    shape = 21,
  ) +
   theme_classic(base_size = 16) +
   theme(legend.title = element_text(face = "bold"),
         legend.text = element_text(size = 10), 
         panel.border = element_rect(linetype = "blank", fill = NA), 
         axis.text.x = element_text(size = 10), 
         axis.text.y = element_text(size = 10)) +
  ylab("Latitude") +
  xlab("Longitude") +
  annotation_north_arrow(
    location = "bl",
    which_north = "true",
    height = unit(0.7, "cm"),
    width = unit(0.7, "cm"),
  )

plot(map)
ggsave(
  "figures/map.png",
  plot = map,
  units = "in",
  width = 6,
  height = 6,
  dpi = 600
)
```

## Table 1
```{r, supp_table1}
# Sites and Species sampled
leaf_traits_noB |>
  group_by(Site,Species, Longitude, Latitude) |>
  summarise(n = as.integer(n()/3))|> # Dividing by 3 due to replicate measurements of each sample
  pivot_wider(names_from = Species, values_from = n)|>
  knitr::kable(caption = "Table 1: Number of individuals collected per population/site and species.")
```


## Table 2
```{r, supp_table}
phyloseq_ntaxa_by_tax(
  ps_clean_3,
  TaxRank ="Phylum",
  relative = F,
  add_meta_data = T
) |>
  as.data.frame() |>
  mutate(sum = sum(N.OTU),
          Phylum = str_remove(Phylum, "^.*?(_|-)")) |>
  group_by(Species, Phylum) |>
  summarise(Ocurrance = n()) |>
  knitr::kable(caption = "Table 2: Prevalence of phyla in samples per species.")
```

## Supplementary methods

### Illumina TruSeq adapters

The modified primers for the first PCR (adapter ligation and ITS1 amplification) were as follows: 5’-CAC TCT TTC CCT ACA CGA CGC TCT TCC GAT CTC TTG GTC ATT TAG AGG AAG TAA-3’ (forward) and 5’-GTG ACT GGA GTT CAG ACG TGT GCT CTT CCG ATC TGC TGC GTT CTT CAT CGA TGC-3’ (reverse).
See [@gardes1993] and [@inbook] for more details.
